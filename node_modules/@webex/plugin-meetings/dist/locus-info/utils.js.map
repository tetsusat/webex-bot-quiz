{"version":3,"sources":["utils.js"],"names":["ParseUtils","compareLocus","newSequence","currentSequence","newMin","Math","min","rangeStart","entries","newMax","max","rangeEnd","curMin","curMax","newUniqueCurrent","calculateUnique","currentUniqueNew","newHasRange","curHasRange","DELTAEVENT","GT","LT","length","EQ","hasUniqueButInRange","CF","generateSyncDebugFlag","meeting","deltaLocus","baseSequence","workingSequence","locusInfo","sequence","targetSequence","flags","setFlag","LOCUS","SEQUENCE","UN_DEF","isEmptySequence","EMPTY","DEF","toLowerCase","NA","desync","toString","s1","s2","res","forEach","entry","indexOf","push","Object","prototype","hasOwnProperty","call","RANGE_START","RANGE_END","uniqueEntries","minimum","maximum","some"],"mappings":"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","sourcesContent":["import {min, max} from 'lodash';\n\nimport {DELTAEVENT, LOCUS} from '../constants';\n\nconst ParseUtils = {};\n\n// https://sqbu-github.cisco.com/WebExSquared/cloud-apps/wiki/Locus-Delta-Events\nParseUtils.compareLocus = (newSequence, currentSequence) => {\n  const newMin = Math.min(newSequence.rangeStart, min(newSequence.entries));\n  const newMax = Math.max(newSequence.rangeEnd, max(newSequence.entries));\n  const curMin = Math.min(currentSequence.rangeStart, min(currentSequence.entries));\n  const curMax = Math.max(currentSequence.rangeEnd, max(currentSequence.entries));\n\n  const newUniqueCurrent = ParseUtils.calculateUnique(newSequence, currentSequence);\n  const currentUniqueNew = ParseUtils.calculateUnique(currentSequence, newSequence);\n\n  const newHasRange = !(newSequence.rangeStart === 0 && newSequence.rangeEnd === 0);\n  const curHasRange = !(currentSequence.rangeStart === 0 && currentSequence.rangeEnd === 0);\n\n  if (newMin > curMax) {\n    return DELTAEVENT.GT;\n  }\n  if (newMax < curMin) {\n    return DELTAEVENT.LT;\n  }\n  if (!newUniqueCurrent.length && !currentUniqueNew.length) {\n    if ((newSequence.rangeEnd - newMin) > (currentSequence.rangeEnd - curMin)) {\n      return DELTAEVENT.GT;\n    }\n    if ((newSequence.rangeEnd - newMin) < (currentSequence.rangeEnd - curMin)) {\n      return DELTAEVENT.LT;\n    }\n\n    return DELTAEVENT.EQ;\n  }\n  if (newUniqueCurrent.length && !currentUniqueNew.length) {\n    return DELTAEVENT.GT;\n  }\n  if (currentUniqueNew.length && !newUniqueCurrent.length) {\n    return DELTAEVENT.LT;\n  }\n\n  if ((!newHasRange && !curHasRange) || ParseUtils.hasUniqueButInRange(newUniqueCurrent, curMin, curMax) ||\n    ParseUtils.hasUniqueButInRange(currentUniqueNew, newMin, newMax)) {\n    return DELTAEVENT.CF;\n  }\n  if (min(newUniqueCurrent) > min(currentUniqueNew)) {\n    return DELTAEVENT.GT;\n  }\n\n  return DELTAEVENT.LT;\n};\n\n\nParseUtils.generateSyncDebugFlag = (meeting, deltaLocus) => {\n  const {baseSequence} = deltaLocus;\n  const workingSequence = meeting.locusInfo.sequence;\n  const targetSequence = deltaLocus.sequence;\n  const flags = ['', '', '', '', '', ''];\n\n  const setFlag = (sequence) => {\n    if (!sequence) {\n      return LOCUS.SEQUENCE.UN_DEF;\n    }\n\n    return (ParseUtils.isEmptySequence(sequence)) ? LOCUS.SEQUENCE.EMPTY : LOCUS.SEQUENCE.DEF;\n  };\n\n  flags[0] = setFlag(baseSequence);\n  flags[1] = setFlag(workingSequence);\n  flags[2] = setFlag(targetSequence);\n\n  flags[3] = (baseSequence && workingSequence) ? ParseUtils.compareLocus(baseSequence, workingSequence).toLowerCase() : LOCUS.SEQUENCE.NA;\n  flags[4] = (workingSequence && targetSequence) ? ParseUtils.compareLocus(workingSequence, targetSequence).toLowerCase() : LOCUS.SEQUENCE.NA;\n  flags[5] = (baseSequence && targetSequence) ? ParseUtils.compareLocus(baseSequence, targetSequence).toLowerCase() : LOCUS.SEQUENCE.NA;\n\n\n  // TODO: check where it is used\n  meeting.desync = flags.toString();\n};\n\nParseUtils.calculateUnique = (s1, s2) => {\n  const res = [];\n\n  s1.entries.forEach((entry) => {\n    /* istanbul ignore else */\n    if ((entry < s2.rangeStart || entry > s2.rangeEnd) && (s2.entries.indexOf(entry) === -1)) {\n      res.push(entry);\n    }\n  });\n\n  return res;\n};\n\n\nParseUtils.isEmptySequence = (sequence) => {\n  if (Object.prototype.hasOwnProperty.call(sequence, LOCUS.SEQUENCE.RANGE_START) && sequence.rangeStart === 0 &&\n    Object.prototype.hasOwnProperty.call(sequence, LOCUS.SEQUENCE.RANGE_END) && sequence.rangeEnd === 0 &&\n    sequence.entries && sequence.entries.length === 0) {\n    return true;\n  }\n\n  return false;\n};\n\nParseUtils.hasUniqueButInRange = (uniqueEntries, minimum, maximum) =>\n  uniqueEntries.some((entry) => ((entry > minimum) && (entry < maximum)));\n\nexport default ParseUtils;\n"]}