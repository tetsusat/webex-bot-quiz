{"version":3,"sources":["util.js"],"names":["MeetingsUtil","extractDestination","destination","type","dest","_LOCUS_ID_","url","ParameterError","triggerH264Codec","testPeerconnection","window","RTCPeerConnection","createOffer","close","LoggerProxy","logger","info","getMeetingAddedType","_INCOMING_","_CREATED_","handleRoapMercury","envelope","meetingCollection","data","eventType","LOCUSEVENT","MESSAGE_ROAP","meeting","getByKey","CORRELATION_ID","correlationId","roap","roapEvent","checkForCorrelationId","deviceUrl","locus","devices","self","foundDevice","find","device"],"mappings":";;;;;;;;;;;;;;;;AAEA;;AAOA;;AACA;;AAVA;AAYA,IAAMA,YAAY,GAAG,EAArB;;AAEAA,YAAY,CAACC,kBAAb,GAAkC,UAACC,WAAD,EAAcC,IAAd,EAAuB;AACvD,MAAIC,IAAI,GAAGF,WAAX;;AAEA,MAAIC,IAAI,KAAKE,qBAAb,EAAyB;AACvB,QAAI,EAAEH,WAAW,IAAIA,WAAW,CAACI,GAA7B,CAAJ,EAAuC;AACrC,YAAM,IAAIC,kBAAJ,CAAmB,kEAAnB,CAAN;AACD;;AACDH,IAAAA,IAAI,GAAGF,WAAW,CAACI,GAAnB;AACD;;AAED,SAAOF,IAAP;AACD,CAXD,C,CAaA;;;AACAJ,YAAY,CAACQ,gBAAb,wFAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,UAAAA,kBAFwB,GAEH,IAAIC,MAAM,CAACC,iBAAX,EAFG;AAAA;AAAA,iBAItBF,kBAAkB,CAACG,WAAnB,EAJsB;;AAAA;AAK5BH,UAAAA,kBAAkB,CAACI,KAAnB;AACAJ,UAAAA,kBAAkB,GAAG,IAArB;AAN4B;AAAA;;AAAA;AAAA;AAAA;;AAS5BK,+BAAYC,MAAZ,CAAmBC,IAAnB,CAAwB,uEAAxB;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAaAhB,YAAY,CAACiB,mBAAb,GAAmC,UAACd,IAAD;AAAA,SAAWA,IAAI,KAAKE,qBAAT,GAAsBa,qBAAtB,GAAmCC,oBAA9C;AAAA,CAAnC;;AAEAnB,YAAY,CAACoB,iBAAb,GAAiC,UAACC,QAAD,EAAWC,iBAAX,EAAiC;AAAA,MACzDC,IADyD,GACjDF,QADiD,CACzDE,IADyD;AAAA,MAEzDC,SAFyD,GAE5CD,IAF4C,CAEzDC,SAFyD;;AAIhE,MAAIA,SAAS,KAAKC,sBAAWC,YAA7B,EAA2C;AACzC,QAAMC,OAAO,GAAGL,iBAAiB,CAACM,QAAlB,CAA2BC,yBAA3B,EAA2CN,IAAI,CAACO,aAAhD,CAAhB;;AAEA,QAAIH,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACI,IAAR,CAAaC,SAAb,CAAuBT,IAAvB;AACD;AACF;AACF,CAXD;;AAaAvB,YAAY,CAACiC,qBAAb,GAAqC,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACzD,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAID,KAAJ,EAAW;AACT,QAAIA,KAAK,IAAIA,KAAK,CAACE,IAAf,IAAuBF,KAAK,CAACE,IAAN,CAAWD,OAAtC,EAA+C;AAC7CA,MAAAA,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWD,OAArB;AACD;;AAED,QAAME,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAa,UAACC,MAAD;AAAA,aAAYA,MAAM,CAAClC,GAAP,KAAe4B,SAA3B;AAAA,KAAb,CAApB;;AAEA,QAAII,WAAW,IAAIA,WAAW,CAACR,aAA/B,EAA8C;AAC5C,aAAOQ,WAAW,CAACR,aAAnB;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAhBD;;eAkBe9B,Y","sourcesContent":["/* globals window */\n\nimport {\n  _LOCUS_ID_,\n  _INCOMING_,\n  _CREATED_,\n  LOCUSEVENT,\n  CORRELATION_ID\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\nimport LoggerProxy from '../common/logs/logger-proxy';\n\nconst MeetingsUtil = {};\n\nMeetingsUtil.extractDestination = (destination, type) => {\n  let dest = destination;\n\n  if (type === _LOCUS_ID_) {\n    if (!(destination && destination.url)) {\n      throw new ParameterError('You cannot create a meeting by locus without a locus.url defined');\n    }\n    dest = destination.url;\n  }\n\n  return dest;\n};\n\n// ** This is a workaround to fix Firefox and google android not downloading H264 codec on start\nMeetingsUtil.triggerH264Codec = async () => {\n  try {\n    let testPeerconnection = new window.RTCPeerConnection();\n\n    await testPeerconnection.createOffer();\n    testPeerconnection.close();\n    testPeerconnection = null;\n  }\n  catch (e) {\n    LoggerProxy.logger.info('Meetings:util#triggerH264Codec --> cannot trigger H264 codec download');\n  }\n};\n\nMeetingsUtil.getMeetingAddedType = (type) => (type === _LOCUS_ID_ ? _INCOMING_ : _CREATED_);\n\nMeetingsUtil.handleRoapMercury = (envelope, meetingCollection) => {\n  const {data} = envelope;\n  const {eventType} = data;\n\n  if (eventType === LOCUSEVENT.MESSAGE_ROAP) {\n    const meeting = meetingCollection.getByKey(CORRELATION_ID, data.correlationId);\n\n    if (meeting) {\n      meeting.roap.roapEvent(data);\n    }\n  }\n};\n\nMeetingsUtil.checkForCorrelationId = (deviceUrl, locus) => {\n  let devices = [];\n\n  if (locus) {\n    if (locus && locus.self && locus.self.devices) {\n      devices = locus.self.devices;\n    }\n\n    const foundDevice = devices.find((device) => device.url === deviceUrl);\n\n    if (foundDevice && foundDevice.correlationId) {\n      return foundDevice.correlationId;\n    }\n  }\n\n  return false;\n};\n\nexport default MeetingsUtil;\n"]}