{"version":3,"sources":["index.js"],"names":["logRequest","request","header","success","failure","LoggerProxy","logger","info","then","arg","catch","error","Meeting","attrs","options","MEETINGS","mediaDirection","audioVideo","VIDEO_RESOLUTIONS","mediaProperties","localQualityLevel","sharePreferences","sendAudio","sendVideo","sendShare","bowser","safari","warn","video","deviceId","preferredVideoDevice","lastVideoDeviceId","getVideoDeviceId","setVideoDeviceId","Media","getSupportedDevice","reject","MediaError","devicePermissions","getUserMedia","isSharing","config","metricName","METRICS_OPERATIONAL_MEASURES","GET_USER_MEDIA_FAILURE","data","correlation_id","correlationId","locus_id","locusUrl","split","pop","reason","message","stack","metadata","type","name","Metrics","sendOperationalMetric","getDevices","id","uuid","v4","userId","orgId","resource","deviceUrl","roapSeq","ROAP_SEQ_PRE","meetingInfo","members","Members","locus","url","parent","webex","roap","Roap","reconnectionManager","ReconnectionManager","audio","meetingFiniteStateMachine","MeetingStateMachine","create","stats","internalStats","conversationUrl","sipUri","partner","owner","hostId","policy","meetingRequest","MeetingRequest","MediaProperties","inMeetingActions","InMeetingActions","callEvents","floorGrantPending","mediaQualityMetrics","statsAnalyzer","mqaProcessor","networkStatus","locusInfo","LocusInfo","updateMeetingObject","bind","recording","deferJoin","undefined","setUpLocusInfoListeners","init","setUpLocusInfoSelfListener","setUpLocusInfoMeetingListener","setUpLocusFullStateListener","setUpLocusUrlListener","setUpLocusHostListener","setUpLocusSelfListener","setUpLocusParticipantsListener","setupLocusControlsListener","setUpLocusMediaSharesListener","setUpLocusInfoMeetingInfoListener","setUpLocusInfoAssignHostListener","setUpLocusInfoMediaInactiveListener","on","EVENTS","DISCONNECT_DUE_TO_INACTIVITY","res","locusId","reconnect","LOCUS_INFO_CAN_ASSIGN_HOST","payload","Trigger","trigger","file","function","EVENT_TRIGGERS","MEETING_ACTIONS_UPDATE","canAssignHost","canLock","getCanLock","canUnlock","getCanUnlock","setCanAssignHost","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","MEETING_STATE_CHANGE","FULL_STATE_TYPE_UPDATE","locusFullStateTypeUpdate","event","trackingId","identifiers","locusStartTime","fullState","lastActive","MQA_STATS","CA_TYPE","initMediaPayload","initPayload","getAnalyzerMetricsPrePayload","internal","metrics","submitCallDiagnosticEvents","clientType","subClientType","NETWORK_STATUS","DISCONNECTED","MEETINGS_NETWORK_DISCONNECTED","CONNECTED","MEETINGS_NETWORK_CONNECTED","LOCUS_INFO_UPDATE_SELF","locusSelfUpdate","newSelf","state","MEETING_STATE","STATES","JOINED","share","LOCUS_INFO_UPDATE_HOST","locusHostUpdate","LOCUS_INFO_UPDATE_PARTICIPANTS","locusParticipantsUpdate","CONTROLS_RECORDING_UPDATED","modifiedBy","lastModified","RECORDING_STATE","RECORDING","MEETING_STARTED_RECORDING","IDLE","MEETING_STOPPED_RECORDING","PAUSED","MEETING_PAUSED_RECORDING","RESUMED","MEETING_RESUMED_RECORDING","LOCUS_INFO_UPDATE_MEDIA_SHARES","current","contentId","disposition","selfId","FLOOR_ACTION","RELEASED","updateShare","receiveShare","finally","MEETING_STARTED_SHARING_REMOTE","GRANTED","MEETING_STOPPED_SHARING_REMOTE","locusMediaSharesUpdate","LOCUS_INFO_UPDATE_URL","locusUrlUpdate","MEETING_LOCKED","MEETING_UNLOCKED","MEETING_INFO_UPDATED","newCanLock","newCanUnlock","self","moderator","MeetingUtil","canUserLock","canUserUnlock","getCanAssignHost","setCanLock","setCanUnlock","SELF_MUTED_BY_OTHERS","MEETING_SELF_MUTED_BY_OTHERS","SELF_UNADMITTED_GUEST","MEETING_SELF_LOBBY_WAITING","postEvent","eventType","LOBBY_ENTERED","meeting","SELF_ADMITTED_GUEST","MEETING_SELF_GUEST_ADMITTED","LOBBY_EXITED","MEDIA_INACTIVITY","MEETING_MEDIA_INACTIVE","REMOTE_ANSWERED_DECLINED","remote","DESTROY_MEETING","wirelessShare","shareTrack","onended","stop","shouldLeave","leave","cleanUp","meetingId","object","length","forEach","key","invitee","alertIfActive","addMember","memberIds","admitMembers","memberId","removeMember","mute","muteMember","transferHostToMember","mqaInterval","clearInterval","automaticMetrics","StatsMetrics","getStats","initialize","setStats","setInterval","processMQAData","mqaMetricsInterval","MQAProcessor","DATA_PLACEMENTS","sendRecvData","toLowerCase","endsWith","STATS","SENDER","getSender","RECEIVER","getReceiver","mqa","getMQA","interval","getSlice","process","override","createStats","log","StatsUtil","generateOptions","CONFIG","WebRTCStats","destroySenders","destroyReceivers","isMuted","isSelf","body","errors","setSipUri","sipMeetingUri","setLocus","participants","getLocusPartner","_CALL_","person","sipUrl","emailAddress","email","seq","mtgLocus","mediaConnections","mediaId","host","initialSetup","pc","ontrack","MEDIA_ID","AUDIO_TRACK","VIDEO_TRACK","SHARE_TRACK","mediaTrack","track","trackMediaID","transceiver","mid","target","audioTransceiver","videoTransceiver","shareTransceiver","receiver","MUTE_AUDIO_FAILURE","EVENT_TYPES","REMOTE_AUDIO","setRemoteAudioTrack","REMOTE_VIDEO","setRemoteVideoTrack","REMOTE_SHARE","setRemoteShare","startAnalyzer","peerConnection","MEDIA_READY","stream","MediaUtil","createMediaStream","unsetRemoteMedia","unsetRemoteTracks","closeRemoteTracks","remoteAudioTrack","remoteVideoTrack","remoteShare","triggerMediaStoppedEvent","mediaType","MEDIA_STOPPED","stopTrack","stopTracks","isTrackStopped","readyState","ENDED","isWrongReadyState","all","localStream","getTrack","audioTrack","videoTrack","settings","getSettings","setMediaSettings","echoCancellation","noiseSuppression","mediaSettings","setLocalAudioTrack","setLocalVideoTrack","aspectRatio","frameRate","height","width","LOCAL","localShare","setLocalShareTrack","contentTracks","displaySurface","cursor","screen","MEETING_REMOVED_REASON","USER_ENDED_SHARE_STREAMS","stopShare","LOCAL_SHARE","audioStopped","videoStopped","unsetLocalVideoTrack","unsetLocalShareTrack","mercury","ONLINE","PeerConnectionManager","close","unsetPeerConnection","reconnection","detection","off","toggle","ParameterError","LOG_HEADER","MUTED","USER_INTERACTION","AUDIO","UNMUTED","UNMUTE_AUDIO_FAILURE","VIDEO","MUTE_VIDEO_FAILURE","UNMUTE_VIDEO_FAILURE","joinOptions","audioVideoOptions","join","joinResponse","getMediaStreams","addMedia","mediaResponse","media","local","JOIN_WITH_MEDIA_FAILURE","validate","ReconnectInProgress","resolve","MEETING_RECONNECTION_STARTING","MEETING_RECONNECTION_SUCCESS","MEETING_RECONNECTION_FAILURE","ReconnectionError","MEETING_RECONNECT_FAILURE","reset","joinFailed","joinSuccess","CALL_INITIATED","pstnAudioType","JOIN_ATTEMPT","MEETING_STATE_MACHINE","RINGING","ring","_JOIN_","resourceId","destination","meetingQuality","QUALITY_LEVELS","errorMessage","Error","setLocalQualityLevel","setRemoteQualityLevel","joinMeetingOptions","fail","JOIN_FAILURE","mediaCapabilities","rx","share_audio","whiteboard","tx","moveMedia","moveToResource","updateMedia","receiveVideo","receiveAudio","oldCorrelationId","meetings","meetingCollection","set","leaveMeeting","moveMeeting","delete","isGuestUnjoined","guest","MEDIA_CAPABILITIES","validateOptions","setMediaPeerConnection","createPeerConnection","setReconnectListener","setPeerConnectionEvents","preMedia","attachMedia","remoteQualityLevel","enableRtx","setRemoteStream","startInternalStats","autoSendMQA","startMediaQualityMetrics","enableStatsAnalyzer","StatsAnalyzer","MEDIA_QUALITY","intervalData","MEETING_HIGH_PACKETLOSS","autoDowngradeEnabled","canUpdateMedia","HIGH","setLocalVideoQuality","MEDIUM","LOW","packetLossRatio","ADD_MEDIA_FAILURE","timerCount","joiningTimer","meetingState","FULL_STATE","ACTIVE","sendRoapMediaRequest","sdp","signalingState","SDP","STABLE","previousSendShareStatus","setContentSlides","UPDATE_MEDIA_FAILURE","checkForStopShare","startShare","previousMediaDirection","sendTrack","receiveTrack","updateTransceiver","setLocalTracks","AudioStateMachine","VideoStateMachine","previousShareStatus","stopFloorRequest","setMediaDirection","_INCOMING_","acknowledgeMeeting","response","ALERT_DISPLAYED","_BUSY_","declineMeeting","decline","LEAVE","canProceed","leaveReason","CLIENT_LEAVE_REQUEST","REQUEST_UPLOAD_LOGS","MEETING_LEAVE_FAILURE","content","mediaShares","find","element","CONTENT","SHARE_INITIATED","changeMeetingFloor","personUrl","uri","resourceUrl","MEETING_STARTED_SHARING_LOCAL","LOCAL_SHARE_FLOOR_GRANTED","MEETING_SHARE_FAILURE","SHARE_STOPPED","STOP_FLOOR_REQUEST_FAILURE","MEETING_STOPPED_SHARING_LOCAL","SHARE_STOPPED_REASON","SELF_STOPPED","startRecording","stopRecording","pauseRecording","resumeRecording","lockMeeting","unlockMeeting","tones","enableDTMF","sendDTMF","layoutType","LAYOUT_TYPES","includes","changeVideoLayout","onFullLocus","level","updateVideo","previousLevel","SET_MEETING_QUALITY_FAILURE","shareConstraints","getDisplayMedia","shareStream","GET_DISPLAY_MEDIA_FAILURE","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport bowser from 'bowser';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport StatsAnalyzer from '../statsAnalyzer';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\nimport Roap from '../roap/index';\nimport Media from '../media';\nimport MediaProperties from '../media/properties';\nimport MeetingStateMachine from '../meeting/state';\nimport AudioStateMachine from '../meeting/audio';\nimport VideoStateMachine from '../meeting/video';\nimport LocusInfo from '../locus-info';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport Metrics from '../metrics';\nimport {trigger, mediaType, eventType} from '../metrics/config';\nimport ReconnectionManager from '../reconnection-manager';\nimport MeetingRequest from '../meeting/request';\nimport Members from '../members/index';\nimport MeetingUtil from '../meeting/util';\nimport MediaUtil from '../media/util';\nimport WebRTCStats from '../stats/index';\nimport StatsMetrics from '../stats/metrics';\nimport StatsUtil from '../stats/util';\nimport ReconnectionError from '../common/errors/reconnection';\nimport ReconnectInProgress from '../common/errors/reconnection-in-progress';\nimport {\n  MEETINGS,\n  ENDED,\n  EVENT_TRIGGERS,\n  EVENT_TYPES,\n  EVENTS,\n  FLOOR_ACTION,\n  _BUSY_,\n  _INCOMING_,\n  ONLINE,\n  _CALL_,\n  CONTENT,\n  ROAP_SEQ_PRE,\n  LOCUSINFO,\n  MEETING_STATE_MACHINE,\n  _JOIN_,\n  STATS,\n  MQA_STATS,\n  MEETING_STATE,\n  METRICS_OPERATIONAL_MEASURES,\n  FULL_STATE,\n  MEETING_REMOVED_REASON,\n  SHARE_STOPPED_REASON,\n  SDP,\n  QUALITY_LEVELS,\n  VIDEO_RESOLUTIONS,\n  VIDEO,\n  LAYOUT_TYPES,\n  NETWORK_STATUS,\n  RECORDING_STATE\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\nimport MediaError from '../common/errors/media';\nimport MQAProcessor from '../metrics/mqa-processor';\n\nimport InMeetingActions from './in-meeting-actions';\n\nconst logRequest = (request, {header = '', success = '', failure = ''}) => {\n  LoggerProxy.logger.info(header);\n\n  return request\n    .then((arg) => {\n      LoggerProxy.logger.info(success);\n\n      return arg;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(failure, error);\n      throw error;\n    });\n};\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n * @property {boolean} isSharing\n */\n\n/**\n  * AudioVideo\n  * @typedef {Object} AudioVideo\n  * @property {Object} audio\n  * @property {String} audio.deviceId\n  * @property {Object} video\n  * @property {String} video.deviceId\n  */\n\n/**\n   * SharePreferences\n   * @typedef {Object} SharePreferences\n   * @property {Object} [shareConstraints]\n   * @property {Boolean} [highFrameRate]\n   */\n\n/**\n * JoinOptions\n * @typedef {Object} JoinOptions\n * @property {String} [resourceId]\n * @property {String} [pin]\n * @property {Boolean} [moderator]\n * @property {String|Object} [meetingQuality]\n * @property {String} [meetingQuality.local]\n * @property {String} [meetingQuality.remote]\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property {Boolean} sendAudio\n * @property {Boolean} sendVideo\n * @property {Boolean} sendShare\n */\n\n/**\n * Recording\n * @typedef {Object} Recording\n * @property {Object} state\n * @property {String} modifiedBy\n */\n\n/**\n  * Meeting State Change Event\n  * Emitted when ever there is a meeting state change\n  * @event meeting:stateChange\n  * @instance\n  * @type {Object}\n  * @property {String} currentState current state of the meeting\n  * @property {String} previousState previous state of the meeting\n  * @memberof Meeting\n  */\n\n/**\n  * Media Ready Event\n  * Emitted when a stream is ready to be rendered\n  * @event media:ready\n  * @instance\n  * @type {Object}\n  * @property {MediaStream} stream the media stream\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n  * Media Stopped Event\n  * Emitted when a stream has stopped sending\n  * @event media:stopped\n  * @instance\n  * @type {Object}\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n * Meeting Ringing Event\n * Emitted when this client should play a ringing sound, because this member is getting an incoming meeting\n * or sending out an incoming meeting\n * @event meeting:ringing\n * @instance\n * @type {Object}\n * @property {String} type // INCOMING or JOIN\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Stop Event\n * Emitted when this client should stop playing a ringing sound\n * @event meeting:ringingStop\n * @instance\n * @type {Object}\n * @property {Object} type\n * @property {Boolean} type.remoteAnswered\n * @property {Boolean} type.remoteDeclined\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Local Event\n * Emitted when this member starts sharing\n * @event meeting:startedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Local Event\n * Emitted when this member stops sharing\n * @event meeting:stoppedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Locked Event\n * Emitted when a meeting is locked\n * @event meeting:locked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Unlocked Event\n * Emitted when a meeting is unlocked\n * @event meeting:unlocked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Actions Update Event\n * Emitted when a user can take actions on a meeting such as lock, unlock, assign host\n * @event meeting:actionsUpdate\n * @instance\n * @type {Object}\n * @property {Boolean} canLock\n * @property {Boolean} canUnlock\n * @property {Boolean} canAssignHost\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when a member is muted by another member\n * @event meeting:self:mutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Guest Admitted Event\n * Emitted when a member admitted to the meeting by another member\n * @event meeting:self:guestAdmitted\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Lobby Waiting Event\n * Emitted when this member enters the lobby and is waiting for the webex meeting to begin\n * @event meeting:self:lobbyWaiting\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n  * Reconnection Starting Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionStarting\n  * @instance\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Success Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionSuccess\n  * @instance\n  * @type {Object}\n  * @property {Object} reconnect\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Failure Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionFailure\n  * @instance\n  * @type {Object}\n  * @property {Error} error\n  * @memberof Meeting\n  */\n\n/**\n  * Meeting High Packet Loss Event\n  * Emitted when ever there is high packet loss detected\n  * @event meeting:highPacketLoss\n  * @type {Object}\n  * @property {String} mediaType Type of media experiencing packet loss\n  * @property {Number} packetLossRatio current packet loss ratio\n  * @memberof Meeting\n  */\n\n/**\n * @description Meeting is the crux of the plugin\n * @export\n * @class Meeting\n */\nexport default class Meeting extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @constructor\n   * @memberof Meeting\n  */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.options = options;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.id = uuid.v4();\n    this.correlationId = this.id;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.userId = attrs.userId;\n    /**\n     * Organization ID\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.orgId = attrs.orgId;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.resource = attrs.resource;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.deviceUrl = attrs.deviceUrl;\n    /**\n     * @description set you -1 as default values is 0 (used to idenfify if 1st roap request was sent)\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roapSeq = ROAP_SEQ_PRE;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    // TODO: needs to be defined as a class\n    this.meetingInfo = {};\n    /**\n     * @instance\n     * @type {Members}\n     * @public\n     * @memberof Meeting\n     */\n    this.members = new Members({locusUrl: (attrs.locus && attrs.locus.url)}, {parent: this.webex});\n    /**\n     * @instance\n     * @type {Roap}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roap = new Roap({}, {parent: this.webex});\n    /**\n     * created later\n     * @instance\n     * @type {ReconnectionManager}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.reconnectionManager = new ReconnectionManager(this);\n    /**\n     * created later\n     * @instance\n     * @type {AudioStateMachine}\n     * @public\n     * @memberof Meeting\n     */\n    this.audio = null;\n    /**\n     * created later\n     * @instance\n     * @type {VideoStateMachine}\n     * @public\n     * @memberof Meeting\n     */\n    this.video = null;\n    /**\n     * @instance\n     * @type {MeetingStateMachine}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.meetingFiniteStateMachine = MeetingStateMachine.create(this);\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @public\n     * @memberof Meeting\n     */\n    this.stats = null;\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.internalStats = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.conversationUrl = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.locusUrl = (attrs.locus && attrs.locus.url) || null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.sipUri = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.partner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.owner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.hostId = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.policy = null;\n    /**\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingRequest = new MeetingRequest({}, options);\n\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MediaProperties}\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaProperties = new MediaProperties();\n    /**\n     * @instance\n     * @type {InMeetingActions}\n     * @public\n     * @memberof Meeting\n    */\n    this.inMeetingActions = new InMeetingActions();\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.isSharing = false;\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.callEvents = [];\n    /**\n     * There is a pending floor requested by the user\n     * @instance\n     * @type {floorGrantPending}\n     * @private\n     * @memberof Meeting\n     */\n    this.floorGrantPending = false;\n    /**\n     * @instance\n     * @type {MediaMetrics}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mediaQualityMetrics = null;\n    /**\n     * @instance\n     * @type {StatsAnalyzer}\n     * @private\n     * @memberof Meeting\n     */\n    this.statsAnalyzer = null;\n    /**\n     * @instance\n     * @type {MQAProcessor}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mqaProcessor = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.networkStatus = null;\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.locusInfo = new LocusInfo(this.updateMeetingObject.bind(this), this.webex, this.id);\n    // We had to add listeners first before setting up the locus instance\n    /**\n     * @instance\n     * @type {Recording}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.recording = null;\n\n    /**\n     * Promise that exists if joining, and resolves upon method completion.\n     * @instance\n     * @type {Promise}\n     * @private\n     * @memberof Meeting\n     */\n    this.deferJoin = undefined;\n\n    this.setUpLocusInfoListeners();\n    this.locusInfo.init(attrs.locus ? attrs.locus : {});\n  }\n\n  /**\n   * Proxy function for all the listener set ups\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoListeners() {\n    // meeting update listeners\n    this.setUpLocusInfoSelfListener();\n    this.setUpLocusInfoMeetingListener();\n    // members update listeners\n    this.setUpLocusFullStateListener();\n    this.setUpLocusUrlListener();\n    this.setUpLocusHostListener();\n    this.setUpLocusSelfListener();\n    this.setUpLocusParticipantsListener();\n    this.setupLocusControlsListener();\n    this.setUpLocusMediaSharesListener();\n    this.setUpLocusInfoMeetingInfoListener();\n    this.setUpLocusInfoAssignHostListener();\n    this.setUpLocusInfoMediaInactiveListener();\n  }\n\n\n  /**\n   * Set up the locus info listener for meetings disconnected due to inactivity\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMediaInactiveListener() {\n    this.locusInfo.on(EVENTS.DISCONNECT_DUE_TO_INACTIVITY, (res) => {\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.DISCONNECT_DUE_TO_INACTIVITY,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n\n      // TODO: need to send metric for locus disconnect\n      LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMediaInactiveListener --> Meeting disconnected due to inactivity: ${res.reason}`);\n      this.reconnect();\n    });\n  }\n\n  /**\n   * Set up the locus info listener for assign host permissions on a meeting\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoAssignHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoAssignHostListener'\n        },\n        EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n        {\n          canAssignHost: payload.canAssignHost,\n          canLock: this.inMeetingActions.getCanLock(),\n          canUnlock: this.inMeetingActions.getCanUnlock()\n        }\n      );\n      this.inMeetingActions.setCanAssignHost(payload.canAssignHost);\n    });\n  }\n\n  /**\n   * Set up the internal locus info full state object listener\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusFullStateListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusFullStateListener'\n        },\n        EVENT_TRIGGERS.MEETING_STATE_CHANGE,\n        {\n          payload\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE, (payload) => {\n      this.members.locusFullStateTypeUpdate(payload);\n    });\n  }\n\n  /**\n   * get the metrics payload pre\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Object}\n   * @memberof Meeting\n   */\n  getAnalyzerMetricsPrePayload(options) {\n    if (options) {\n      const {event, trackingId, locus} = options;\n\n      if (!event) {\n        LoggerProxy.logger.error('Meeting:index#getAnalyzerMetricsPrePayload --> Error [Call Analyzer Event', event || '', `]: invalid identifers or event type! ${this.correlationId}`);\n\n        return null;\n      }\n\n      const identifiers = {\n        correlationId: this.correlationId,\n        userId: this.userId,\n        deviceId: this.deviceUrl,\n        orgId: this.orgId\n      };\n\n      // If locus is passed take the value from there else use meeting object\n      if (locus) {\n        identifiers.locusId = locus.url.split('/').pop();\n        identifiers.locusStartTime = locus.fullState.lastActive;\n      }\n      else if (this.locusUrl && this.locusInfo.fullState) {\n        identifiers.locusId = this.locusUrl && this.locusUrl.split('/').pop();\n        identifiers.locusStartTime = this.locusInfo.fullState && this.locusInfo.fullState.lastActive;\n      }\n\n      if (options.trackingId) {\n        identifiers.trackingId = trackingId;\n      }\n\n      let payload = {};\n\n      if (options.type === MQA_STATS.CA_TYPE) {\n        payload = Metrics.initMediaPayload(options.event, identifiers, options);\n      }\n\n      else {\n        payload = Metrics.initPayload(options.event, identifiers, options);\n      }\n\n      return payload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Send the metrics to call-analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendCallAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload(options);\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * Send the metrics to Media Quality Analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendMediaQualityAnalyzerMetrics(options) {\n    options.type = MQA_STATS.CA_TYPE;\n    options.clientType = this.config.metrics.clientType;\n    options.subClientType = this.config.metrics.subClientType;\n    const payload = this.getAnalyzerMetricsPrePayload(options);\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * sets the network status on meeting object\n   * @param {String} networkStatus\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  setNetworkStatus(networkStatus) {\n    if (networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED,\n      );\n    }\n    else if (networkStatus === NETWORK_STATUS.CONNECTED && this.networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_CONNECTED,\n      );\n    }\n\n    this.networkStatus = networkStatus;\n  }\n\n  /**\n   * Set up the locus info self listener\n   * update self value for members and updates the member\n   * notifies consumer with members:self:update {activeSelfId endedSelfId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusSelfListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_SELF, (payload) => {\n      this.members.locusSelfUpdate(payload);\n\n      // If user moved to a JOINED state and there is a pending floor grant trigger it\n      if (this.floorGrantPending && payload.newSelf.state === MEETING_STATE.STATES.JOINED) {\n        this.share()\n          .then(() => { this.floorGrantPending = false; });\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info host listener\n   * update host value for members and updates the member\n   * notifies consumer with members:host:update: {activeHostId, endedHostId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_HOST, (payload) => {\n      this.members.locusHostUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info participants update listener\n   * update members collection value for members\n   * notifies consumer with members:update\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusParticipantsListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS, (payload) => {\n      this.members.locusParticipantsUpdate(payload);\n    });\n  }\n\n\n  /**\n   * Set up the locus info recording update listener\n   * update recording value for the meeting\n   * notifies consumer with:\n   *  meeting:recording:started\n   *  meeting:recording:stopped\n   *  meeting:recording:paused\n   *  meeting:recording:resumed\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setupLocusControlsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n      ({state, modifiedBy, lastModified}) => {\n        let event;\n\n        switch (state) {\n          case RECORDING_STATE.RECORDING:\n            event = EVENT_TRIGGERS.MEETING_STARTED_RECORDING;\n            break;\n          case RECORDING_STATE.IDLE:\n            event = EVENT_TRIGGERS.MEETING_STOPPED_RECORDING;\n            break;\n          case RECORDING_STATE.PAUSED:\n            event = EVENT_TRIGGERS.MEETING_PAUSED_RECORDING;\n            break;\n          case RECORDING_STATE.RESUMED:\n            event = EVENT_TRIGGERS.MEETING_RESUMED_RECORDING;\n            break;\n          default:\n            event = null;\n            break;\n        }\n\n        // `RESUMED` state should be converted to `RECORDING` after triggering the event\n        this.recording = {\n          state: state === RECORDING_STATE.RESUMED ? RECORDING_STATE.RECORDING : state,\n          modifiedBy,\n          lastModified\n        };\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener'\n          },\n          event,\n          this.recording\n        );\n      });\n  }\n\n  /**\n   * Set up the locus info media shares listener\n   * update content sharing id value for members, and updates the member\n   * notifies consumer with members:content:update {activeContentSharingId, endedContentSharingId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusMediaSharesListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES, (payload) => {\n      const {contentId, disposition} = payload.current;\n\n      // Check if screenshare is being taken over by a remote\n      // If so, terminate the share and allow the remote to be on the floor\n      // Terminating the share allows the user to screenshare again without any issues\n      if (\n        this.isSharing &&\n        this.selfId !== contentId &&\n        disposition !== FLOOR_ACTION.RELEASED\n      ) {\n        this.updateShare({\n          sendShare: false,\n          receiveShare: this.mediaProperties.mediaDirection.receiveShare\n        }).finally(() => {\n          this.isSharing = false;\n\n          // Trigger remote share start event\n          Trigger.trigger(\n            this,\n            {\n              file: 'meetings/index',\n              function: 'remoteShare'\n            },\n            EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE\n          );\n        });\n      }\n      // Check if remote started a share\n      else if (\n        this.selfId !== contentId &&\n        disposition === FLOOR_ACTION.GRANTED\n      ) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE\n        );\n      }\n      // check if remote stopped a share\n      else if (\n        this.selfId !== contentId &&\n        disposition === FLOOR_ACTION.RELEASED\n      ) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare'\n          },\n          EVENT_TRIGGERS.MEETING_STOPPED_SHARING_REMOTE\n        );\n      }\n\n      this.members.locusMediaSharesUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info url listener\n   * update locus_url value for members\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusUrlListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_URL, (payload) => {\n      this.members.locusUrlUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info meeting info listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  setUpLocusInfoMeetingInfoListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_LOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_LOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_UNLOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_UNLOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_INFO_UPDATED, (payload) => {\n      if (payload && payload.info) {\n        let newCanLock;\n        let newCanUnlock;\n\n        if (payload.self && !payload.self.moderator) {\n          newCanLock = false;\n          newCanUnlock = false;\n        }\n        else {\n          newCanLock = MeetingUtil.canUserLock(payload.info.moderator, payload.info.policy);\n          newCanUnlock = MeetingUtil.canUserUnlock(payload.info.moderator, payload.info.policy);\n        }\n\n        if (newCanLock && !this.inMeetingActions.canLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: true,\n              canUnlock: false,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        if (newCanUnlock && !this.inMeetingActions.canUnlock || !newCanLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: false,\n              canUnlock: true,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        this.inMeetingActions.setCanLock(newCanLock || false);\n        this.inMeetingActions.setCanUnlock(newCanUnlock || false);\n      }\n    });\n  }\n\n  /**\n   * Internal function to listen to the self object changes\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoSelfListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_MUTED_BY_OTHERS, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_MUTED_BY_OTHERS,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LOBBY_WAITING,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_ENTERED,\n          meeting: this\n        });\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_GUEST_ADMITTED,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_EXITED,\n          meeting: this\n        });\n      }\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_INACTIVITY, () => {\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.MEETING_MEDIA_INACTIVE,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n      this.reconnect();\n    });\n  }\n\n  /**\n   * Add LocusInfo nested object listeners (from child to parent)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMeetingListener() {\n    this.locusInfo.on(EVENTS.REMOTE_ANSWERED_DECLINED, (payload) => {\n      this.meetingFiniteStateMachine.remote(payload);\n    });\n    this.locusInfo.on(EVENTS.DESTROY_MEETING, (payload) => {\n      // if self state is NOT left\n\n      // TODO: Handle sharing and wireless sharing when meeting end\n      if (this.wirelessShare) {\n        if (this.mediaProperties.shareTrack) {\n          this.mediaProperties.shareTrack.onended = null;\n          this.mediaProperties.shareTrack.stop();\n        }\n      }\n      // when multiple WEB deviceType join with same user\n      // and some of the devices are joined and some are left\n      // when your own device is still connected you want to leave and destroy\n      // else you want to just destroy\n      // this looks odd because when it leaves it should destroy, but we get a\n      // leave response and we should destroy it on the next event loop\n      // the leave response gets parsed and we decide if we want to destroy the meeting\n      // the first time we just leave it, the second time it comes it destroys it from the collection\n      if (payload.shouldLeave) {\n        // TODO:  We should do cleaning of meeting object if the shouldLeave: false because there might be meeting object which we are not cleaning\n\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.warn('Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. The meeting has been left, but has not been destroyed, you should see a later event for leave.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n      else {\n        LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> MEETING_REMOVED_REASON', payload.reason);\n        MeetingUtil.cleanUp(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingListener'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: payload.reason,\n            meetingId: this.id\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Set meeting values rather than events\n   * @param {Object} object\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   * // TODO: is this function necessary?\n   */\n  updateMeetingObject(object) {\n    // Validate if these are valid meeting object property\n    // TODO: add a check to make sure the value passed in the constructor\n    // is not changed by any delta event\n    if (object && Object.keys(object).length) {\n      Object.keys(object).forEach((key) => {\n        this[key] = object[key];\n      });\n    }\n  }\n\n  /**\n   * Invite a guest to the call that isn't normally part of this call\n   * @param {Object} invitee\n   * @param {String} invitee.emailAddress\n   * @param {String} invitee.email\n   * @param {Boolean} [alertIfActive]\n   * @returns {Promise} see #members.addMember\n   * @public\n   * @memberof Meeting\n   */\n  invite(invitee, alertIfActive = true) {\n    return this.members.addMember(invitee, alertIfActive);\n  }\n\n  /**\n   * Admit the guest(s) to the call once they are waiting\n   * @param {Array} memberIds\n   * @returns {Promise} see #members.admitMembers\n   * @public\n   * @memberof Meeting\n   */\n  admit(memberIds) {\n    return this.members.admitMembers(memberIds);\n  }\n\n  /**\n   * Remove the member from the meeting, boot them\n   * @param {String} memberId\n   * @returns {Promise} see #members.removeMember\n   * @public\n   * @memberof Meeting\n   */\n  remove(memberId) {\n    return this.members.removeMember(memberId);\n  }\n\n  /**\n   * Mute another member from the meeting\n   * @param {String} memberId\n   * @param {Boolean} mute\n   * @returns {Promise} see #members.muteMember\n   * @public\n   * @memberof Meeting\n   */\n  mute(memberId, mute = true) {\n    return this.members.muteMember(memberId, mute);\n  }\n\n  /**\n   * Transfer the moderator role to another eligible member\n   * @param {String} memberId\n   * @param {Boolean} moderator\n   * @returns {Promise} see #members.transferHostToMember\n   * @public\n   * @memberof Meeting\n   */\n  transfer(memberId, moderator = true) {\n    return this.members.transferHostToMember(memberId, moderator);\n  }\n\n  /**\n   * Reference to the Members object\n   * @returns {Members}\n   * @public\n   * @memberof Meeting\n   */\n  getMembers() {\n    return this.members;\n  }\n\n  /**\n   * If this gets turned off mid meeting after attaching media, it will shut down the MQA metrics and they will\n   * not restart unless the start function is called again\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  cleanMQAInterval() {\n    if (this.mqaInterval) {\n      clearInterval(this.mqaInterval);\n    }\n  }\n\n  /**\n   * Automatically publishes media metrics data and on a config interval\n   * uses the existing getStats data filter, so no new streams are created\n   * but it is separate than history, so history will not be available\n   * @returns {MediaMetrics}\n   * @public\n   * @memberof Meeting\n   */\n  startMediaQualityMetrics() {\n    const automaticMetrics = new StatsMetrics({config: this.config});\n\n    const stats = this.getStats(automaticMetrics.initialize(), true);\n\n    this.mediaQualityMetrics = automaticMetrics;\n\n    this.mediaQualityMetrics.setStats(stats);\n\n    this.mqaInterval = setInterval(() => this.processMQAData(), this.config.metrics.mqaMetricsInterval);\n\n    return automaticMetrics;\n  }\n\n  /**\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  processMQAData() {\n    if (!this.mqaProcessor) {\n      this.mqaProcessor = new MQAProcessor();\n    }\n\n    MQA_STATS.DATA_PLACEMENTS.forEach((key) => {\n      if (this.mediaQualityMetrics && this.mediaQualityMetrics.stats) {\n        let sendRecvData;\n\n        if (key.toLowerCase().endsWith(STATS.SENDER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getSender(key);\n        }\n        else if (key.toLowerCase().endsWith(STATS.RECEIVER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getReceiver(key);\n        }\n        let mqa;\n\n        if (sendRecvData) {\n          mqa = sendRecvData.getMQA();\n        }\n        if (mqa) {\n          const interval = mqa.getSlice(this.config.metrics.mqaMetricsInterval / 1000); // milliseconds -> second based intervals\n\n          this.mqaProcessor.process(key, interval);\n        }\n      }\n    });\n  }\n\n  /**\n   * Reference to the stats builder object\n   * @param {Object} options - see #createStats\n   * @param {Boolean} override - override the previous getStats\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  getStats(options, override) {\n    if (!this.stats) {\n      return this.createStats(options);\n    }\n    if (override) {\n      if (this.stats) {\n        LoggerProxy.logger.log('Meeting:index#getStats --> Overriding the previous stats object without destroying first can result in memory leaks.');\n      }\n\n      return this.createStats(options);\n    }\n\n    return this.stats;\n  }\n\n  /**\n   * write the stats builder object and assign to meeting property\n   * @param {Object} options\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  createStats(options = {}) {\n    StatsUtil.generateOptions(options, STATS.CONFIG, this);\n\n    options.config = STATS.CONFIG;\n\n    this.stats = new WebRTCStats(this.attrs, this.options, options);\n\n    return this.stats;\n  }\n\n  /**\n   * if you have started a stats instance, here's how you can stop it\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  stopStats() {\n    if (this.stats) {\n      this.stats.destroySenders();\n      this.stats.destroyReceivers();\n      this.stats = null;\n    }\n  }\n\n  /**\n   * Convenience function to tell whether a meeting is muted\n   * @returns {Boolean} if meeting audio muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isAudioMuted() {\n    return this.audio && this.audio.isMuted();\n  }\n\n  /**\n   * Convenience function to tell if the end user last changed the audio state\n   * @returns {Boolean} if audio was manipulated by the end user\n   * @public\n   * @memberof Meeting\n   */\n  isAudioSelf() {\n    return this.audio && this.audio.isSelf();\n  }\n\n  /**\n   * Convenience function to tell whether video is muted\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoMuted() {\n    return this.video && this.video.isMuted();\n  }\n\n  /**\n   * Convenience function to tell whether the end user changed the video state\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoSelf() {\n    return this.video && this.video.isSelf();\n  }\n\n  /**\n   * Sets the meeting info on the class instance\n   * @param {Object} meetingInfo\n   * @param {Object} meetingInfo.body\n   * @param {String} meetingInfo.body.conversationUrl\n   * @param {String} meetingInfo.body.locusUrl\n   * @param {String} meetingInfo.body.sipUri\n   * @param {Object} meetingInfo.body.owner\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseMeetingInfo(meetingInfo) {\n    // MeetingInfo will be undefined for 1:1 calls\n    if (meetingInfo && meetingInfo.body && !(meetingInfo.errors && meetingInfo.errors.length > 0)) {\n      this.conversationUrl = meetingInfo.body.conversationUrl || this.conversationUrl;\n      this.locusUrl = meetingInfo.body.locusUrl || this.locusUrl;\n      this.setSipUri(meetingInfo.body.sipMeetingUri || this.sipUri);\n      this.owner = meetingInfo.body.owner || this.owner;\n    }\n  }\n\n  /**\n   * Sets the first locus info on the class instance\n   * @param {Object} locus\n   * @param {String} locus.url\n   * @param {Array} locus.participants\n   * @param {Object} locus.self\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseLocus(locus) {\n    if (locus) {\n      this.locusUrl = locus.url;\n      // TODO: move this to parse participants module\n      this.setLocus(locus);\n\n      // check if we can extract this info from partner\n      // Parsing of locus object must be finished at this state\n      if (locus.participants && locus.self) {\n        this.partner = MeetingUtil.getLocusPartner(locus.participants, locus.self);\n      }\n\n      // For webex meeting the sipUrl gets updated in info parser\n      if (!this.sipUri && this.partner && this.type === _CALL_) {\n        this.setSipUri(this.partner.person.sipUrl || this.partner.person.emailAddress || this.partner.person.email);\n      }\n    }\n  }\n\n  /**\n   * Sets the sip uri on the class instance\n   * uses meeting info as precedence\n   * @param {String} sipUri\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setSipUri(sipUri) {\n    // This can be tel no, device id or a sip uri, user Id\n    this.sipUri = sipUri;\n  }\n\n  /**\n   * Set the roap seq on the class instance\n   * @param {Number} seq\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setRoapSeq(seq) {\n    if (seq >= 0) {\n      this.roapSeq = seq;\n    }\n  }\n\n  /**\n   * Set the locus info the class instance\n   * @param {Object} locus\n   * @param {Array} locus.mediaConnections\n   * @param {String} locus.locusUrl\n   * @param {String} locus.locusId\n   * @param {String} locus.mediaId\n   * @param {Object} locus.host\n   * @todo change name to genertic parser\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocus(locus) {\n    const mtgLocus = locus.locus || locus;\n\n    // LocusInfo object saves the locus object\n    // this.locus = mtgLocus;\n    this.mediaConnections = locus.mediaConnections;\n    this.locusUrl = locus.locusUrl || locus.url;\n    this.locusId = locus.locusId;\n    this.selfId = locus.selfId;\n    this.mediaId = locus.mediaId;\n    this.hostId = mtgLocus.host ? mtgLocus.host.id : this.hostId;\n    this.locusInfo.initialSetup(mtgLocus);\n  }\n\n  /**\n   * Sets the remote stream on the class instance and emits and\n   * event to developers\n   * @param {Object} pc The remote stream peer connection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setRemoteStream(pc) {\n    if (!pc) {\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    pc.ontrack = (event) => {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: It's possible for media to not be present\n      // so we might need to either\n      // A) wait until we have media flowing\n      // B) trigger a second event when video is flowing\n      LoggerProxy.logger.log(`Meeting:index#setRemoteStream --> ontrack event received for peerConnection: ${event}`);\n\n      const MEDIA_ID = {\n        AUDIO_TRACK: '0',\n        VIDEO_TRACK: '1',\n        SHARE_TRACK: '2'\n      };\n      let eventType = null;\n      const mediaTrack = event.track;\n      let trackMediaID = null;\n\n\n      // In case of safari some time the transceiver is not present for specific os version\n      // sdk tries to determine the transceive using the track id present\n      if (event.transceiver && event.transceiver.mid) {\n        trackMediaID = event.transceiver.mid;\n      }\n      else {\n        const {audioTransceiver, videoTransceiver, shareTransceiver} = event.target;\n\n        // audio kind indicates its a audio stream\n        if (mediaTrack.id === audioTransceiver.receiver.track.id) {\n          trackMediaID = '0';\n        }\n        else\n        if (mediaTrack.id === videoTransceiver.receiver.track.id) {\n          trackMediaID = '1';\n        }\n        else\n        if (mediaTrack.id === shareTransceiver.receiver.track.id) {\n          trackMediaID = '2';\n        }\n        else {\n          trackMediaID = null;\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop()\n            }\n          );\n        }\n      }\n\n\n      switch (trackMediaID) {\n        case MEDIA_ID.AUDIO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_AUDIO;\n          this.mediaProperties.setRemoteAudioTrack(mediaTrack);\n          break;\n        case MEDIA_ID.VIDEO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_VIDEO;\n          this.mediaProperties.setRemoteVideoTrack(mediaTrack);\n          break;\n        case MEDIA_ID.SHARE_TRACK:\n          if (event.track) {\n            eventType = EVENT_TYPES.REMOTE_SHARE;\n            this.mediaProperties.setRemoteShare(mediaTrack);\n          }\n          break;\n        default: {\n          LoggerProxy.logger.log('Meeting:index#setRemoteStream --> no matching media track id');\n        }\n      }\n\n      // start stats here the stats are coming null if you dont receive streams\n\n      this.statsAnalyzer.startAnalyzer(this.mediaProperties.peerConnection);\n\n      if (eventType && mediaTrack) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setRemoteStream:pc.ontrack'\n          },\n          EVENT_TRIGGERS.MEDIA_READY,\n          {\n            type: eventType,\n            stream: MediaUtil.createMediaStream([mediaTrack])\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Removes remote audio and video stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3');\n    this.mediaProperties.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes remote audio, video and share tracks from class instance's mediaProperties\n   * @returns {undefined}\n   */\n  unsetRemoteTracks() {\n    this.mediaProperties.unsetRemoteTracks();\n  }\n\n  /**\n   * Removes the remote stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  closeRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#closeRemoteStream --> [DEPRECATION WARNING]: closeRemoteStream has been deprecated after v1.89.3');\n    this.closeRemoteTracks();\n  }\n\n  /**\n   * Removes the remote tracks on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  closeRemoteTracks() {\n    const {\n      remoteAudioTrack,\n      remoteVideoTrack,\n      remoteShare\n    } = this.mediaProperties;\n\n    /**\n     * Triggers an event to the developer\n     * @param {string} mediaType Type of media that was stopped\n     * @returns {void}\n     * @inner\n     */\n    const triggerMediaStoppedEvent = (mediaType) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'closeRemoteTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_STOPPED,\n        {\n          type: mediaType\n        }\n      );\n    };\n\n    /**\n     * Stops a media track and emits an event\n     * @param {MediaStreamTrack} track Media track to stop\n     * @param {string} type Media track type\n     * @returns {Promise}\n     * @inner\n     */\n    // eslint-disable-next-line arrow-body-style\n    const stopTrack = (track, type) => {\n      return Media.stopTracks(track)\n        .then(() => {\n          const isTrackStopped = track && track.readyState === ENDED;\n          const isWrongReadyState = track && !isTrackStopped;\n\n          if (isTrackStopped) {\n            triggerMediaStoppedEvent(type);\n          }\n          else if (isWrongReadyState) {\n            LoggerProxy.logger.warn(`Meeting:index#closeRemoteTracks --> Error: MediaStreamTrack.readyState is ${track.readyState} for ${type}`);\n          }\n        });\n    };\n\n    return Promise.all([\n      stopTrack(remoteAudioTrack, EVENT_TYPES.REMOTE_AUDIO),\n      stopTrack(remoteVideoTrack, EVENT_TYPES.REMOTE_VIDEO),\n      stopTrack(remoteShare, EVENT_TYPES.REMOTE_SHARE)\n    ]);\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localStream the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalTracks(localStream) {\n    if (localStream) {\n      const {audioTrack, videoTrack} = MeetingUtil.getTrack(localStream);\n      let settings = null;\n\n      if (audioTrack) {\n        settings = audioTrack.getSettings();\n        this.mediaProperties.setMediaSettings('audio', {\n          echoCancellation: settings.echoCancellation,\n          noiseSuppression: settings.noiseSuppression\n        });\n\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Audio settings.', JSON.stringify(this.mediaProperties.mediaSettings.audio));\n        this.mediaProperties.setLocalAudioTrack(audioTrack);\n      }\n\n      if (videoTrack) {\n        settings = videoTrack.getSettings();\n        this.mediaProperties.setLocalVideoTrack(videoTrack);\n        this.mediaProperties.setMediaSettings('video', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width\n        });\n        // store and save the selected video input device\n        if (settings.deviceId) {\n          this.mediaProperties.setVideoDeviceId(settings.deviceId);\n        }\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Video settings.', JSON.stringify(this.mediaProperties.mediaSettings.video));\n      }\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL,\n          stream: MediaUtil.createMediaStream([this.mediaProperties.audioTrack, this.mediaProperties.videoTrack])\n        }\n      );\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localShare the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalShareTrack(localShare) {\n    let settings = null;\n\n    if (localShare) {\n      this.mediaProperties.setLocalShareTrack(MeetingUtil.getTrack(localShare).videoTrack);\n      const contentTracks = this.mediaProperties.shareTrack;\n\n      if (contentTracks) {\n        settings = contentTracks.getSettings();\n        this.mediaProperties.setMediaSettings('screen', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width,\n          displaySurface: settings.displaySurface,\n          cursor: settings.cursor\n        });\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Screen settings.', JSON.stringify(this.mediaProperties.mediaSettings.screen));\n      }\n\n      contentTracks.onended = () => {\n        if (this.wirelessShare) {\n          this.leave({reason: MEETING_REMOVED_REASON.USER_ENDED_SHARE_STREAMS});\n        }\n        else {\n          this.stopShare();\n        }\n      };\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalShareTrack'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL_SHARE,\n          stream: localShare\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalStream() {\n    const {audioTrack, videoTrack} = this.mediaProperties;\n\n    return Media.stopTracks(audioTrack)\n      .then(() => Media.stopTracks(videoTrack))\n      .then(() => {\n        const audioStopped = audioTrack && audioTrack.readyState === ENDED;\n        const videoStopped = videoTrack && videoTrack.readyState === ENDED;\n\n        if (audioStopped && videoStopped) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'closeLocalStream'\n            },\n            EVENT_TRIGGERS.MEDIA_STOPPED, {\n              type: EVENT_TYPES.LOCAL\n            }\n          );\n        }\n        else if (audioTrack || videoTrack) {\n          LoggerProxy.logger.warn('Meeting:index#closeLocalStream --> Error: MediaStreamTrack.readyState is incorrect.');\n        }\n      });\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalShare() {\n    const track = this.mediaProperties.shareTrack;\n\n    return Media.stopTracks(track).then(() => {\n      if (track && track.readyState === ENDED) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'closeLocalShare'\n          },\n          EVENT_TRIGGERS.MEDIA_STOPPED, {\n            type: EVENT_TYPES.LOCAL_SHARE\n          }\n        );\n      }\n      else if (track) {\n        // Track exists but with wrong readyState\n        LoggerProxy.logger.warn(`Meeting:index#closeLocalShare --> Error: MediaStreamTrack.readyState is ${track.readyState} for localShare`);\n      }\n    });\n  }\n\n  /**\n   * Removes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalVideoTrack() {\n    this.mediaProperties.unsetLocalVideoTrack();\n  }\n\n  /**\n   * Removes the local share from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalShareTrack() {\n    this.mediaProperties.unsetLocalShareTrack();\n  }\n\n  /**\n   * sets up reconnection logic\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @todo remove\n   * // TODO: remove??\n   */\n  setReconnectListener() {\n    // Client will have a socket manager and handle reconnecting to mercury, when we reconnect to mercury\n    // if the meeting has active peer connections, it should try to reconnect.\n    this.webex.internal.mercury.on(ONLINE, () => {\n      LoggerProxy.logger.log('Meeting:index#setReconnectListener --> Web socket online');\n    });\n  }\n\n  /**\n   * Close the peer connections and remove them from the class. Triggers an event\n   * when each is closed.\n   * @returns {Promise} returns a resolved promise with an array of closed peer connections\n   * @public\n   * @memberof Meeting\n   */\n  closePeerConnections() {\n    return PeerConnectionManager.close(this.mediaProperties.peerConnection);\n  }\n\n  /**\n   * Unsets the peer connections on the class\n   * warning DO NOT CALL WITHOUT CLOSING PEER CONNECTIONS FIRST\n   * @param {PeerConnection} peerConnection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetPeerConnections() {\n    this.mediaProperties.unsetPeerConnection();\n    if (this.config.reconnection.detection) {\n      this.webex.internal.mercury.off(ONLINE);\n    }\n  }\n\n  /**\n   * Convenience method to set the correlation id for the Meeting\n   * @param {String} id correlation id to set on the class\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setCorrelationId(id) {\n    this.correlationId = id;\n  }\n\n  /**\n   * Mute the audio for a meeting\n   * @returns {Promise} resolves the data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  muteAudio() {\n    if (!this.audio || (this.audio && !this.audio.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteAudio -->';\n\n    // First, stop sending the local audio media\n    return logRequest(this.audio.toggle({\n      mute: true,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting audio`,\n      success: `${LOG_HEADER} muted audio successfully`,\n      failure: `${LOG_HEADER} muting audio failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting audio\n   * @returns {Promise} resolves data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteAudio() {\n    if (!this.audio || (this.audio && !this.audio.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteAudio -->';\n\n    // First, send the control to unmute the participant on the server\n    return logRequest(this.mute(this.members.selfId, false)\n      // Next, start sending the local audio media\n      .then(() => this.audio.toggle({\n        mute: false,\n        self: true\n      }))\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting audio`,\n      success: `${LOG_HEADER} unmuted audio successfully`,\n      failure: `${LOG_HEADER} unmuting audio failed, `\n    });\n  }\n\n  /**\n   * Mute the video for a meeting\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  muteVideo() {\n    if (!this.video || (this.video && !this.video.toggle)) {\n      return Promise.reject(new ParameterError('no video control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteVideo -->';\n\n    return logRequest(this.video.toggle({\n      mute: true,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting video`,\n      success: `${LOG_HEADER} muted video successfully`,\n      failure: `${LOG_HEADER} muting video failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting video\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteVideo() {\n    if (!this.video || (this.video && !this.video.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteVideo -->';\n\n    return logRequest(this.video.toggle({\n      mute: false,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting video`,\n      success: `${LOG_HEADER} unmuted video successfully`,\n      failure: `${LOG_HEADER} unmuting video failed, `\n    });\n  }\n\n  /**\n   * Shorthand function to join AND set up media\n   * @param {Object} options - options to join with media\n   * @param {JoinOptions} [options.joinOptions] - see #join()\n   * @param {MediaDirection} options.mediaSettings - see #addMedia()\n   * @param {AudioVideo} [options.audioVideoOptions] - see #getMediaStreams()\n   * @returns {Promise} -- {join: see join(), media: see addMedia(), local: see getMediaStreams()}\n   * @public\n   * @memberof Meeting\n   * @example\n   * joinWithMedia({\n   *  joinOptions: {resourceId: 'resourceId' },\n   *  mediaSettings: {\n   *   sendAudio: true,\n   *   sendVideo: true,\n   *   sendShare: false,\n   *   receiveVideo:true,\n   *   receiveAudio: true,\n   *   receiveShare: true\n   * }\n   * audioVideoOptions: {\n   *   audio: 'audioDeviceId',\n   *   video: 'videoDeviceId'\n   * }})\n   */\n  joinWithMedia(options = {}) {\n    // TODO: add validations for parameters\n    const {mediaSettings, joinOptions, audioVideoOptions} = options;\n\n    return this.join(joinOptions)\n      .then((joinResponse) =>\n        this.getMediaStreams(mediaSettings, audioVideoOptions).then(([localStream, localShare]) =>\n          this.addMedia({\n            mediaSettings,\n            localShare,\n            localStream\n          }).then((mediaResponse) => ({\n            join: joinResponse,\n            media: mediaResponse,\n            local: [localStream, localShare]\n          }))))\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#joinWithMedia --> ', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_WITH_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Initiates the reconnection of the media in the meeting\n   *\n   * @param {object} options\n   * @returns {Promise} resolves with {reconnect} or errors with {error}\n   * @public\n   * @memberof Meeting\n   */\n  reconnect(options) {\n    LoggerProxy.logger.log('Meeting:index#reconnect --> attempting to reconnect');\n\n    if (!this.reconnectionManager || !this.reconnectionManager.reconnect) {\n      throw new ParameterError('Cannot reconnect, ReconnectionManager must first be defined.');\n    }\n\n    try {\n      LoggerProxy.logger.info('Meeting:index#reconnect --> Validating reconnect ability.');\n      this.reconnectionManager.validate();\n    }\n    catch (error) {\n      // Unable to reconnect this call\n      if (error instanceof ReconnectInProgress) {\n        LoggerProxy.logger.info('Meeting:index#reconnect --> Unable to reconnect, reconnection in progress.');\n      }\n      else {\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Unable to reconnect.', error);\n      }\n\n      return Promise.resolve();\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'reconnect'\n      },\n      EVENT_TRIGGERS.MEETING_RECONNECTION_STARTING\n    );\n\n\n    return this.reconnectionManager\n      .reconnect(options)\n      .then(() => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_SUCCESS\n        );\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Meeting reconnect success');\n      })\n      .catch((error) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_FAILURE,\n          {\n            error: new ReconnectionError('Reconnection failure event', error)\n          }\n        );\n\n        LoggerProxy.logger.error('Meeting:index#reconnect --> Meeting reconnect failed', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_RECONNECT_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        return Promise.reject(new ReconnectionError('Reconnection failure event', error));\n      })\n      .finally(() => {\n        this.reconnectionManager.reset();\n      });\n  }\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {JoinOptions} options A configurable options object for joining a meeting\n   * @returns {Promise} the join response\n   * @public\n   * @memberof Meeting\n   * Scenario A: Joining own claimed personal meeting room\n   * Scenario B: Joining other's claimed personal meeting room, do pass pin (if desired to join as host, or nullify), do pass moderator\n   * Scenario C: Joining an unclaimed personal meeting room, -do not- pass pin or moderator on first try, -do- pass pin and moderator\n   *             if joining as host on second loop, pass pin and pass moderator if joining as guest on second loop\n   * Scenario D: Joining any other way (sip, pstn, conversationUrl, link just need to specify resourceId)\n   */\n  join(options = {}) {\n    // If a join request is being processed, refer to the deferred promise.\n    if (this.deferJoin) {\n      return this.deferJoin;\n    }\n\n    // Scope-up the resolve/reject methods for handling within join().\n    let joinFailed;\n    let joinSuccess;\n\n    // Create a deferred promise for a consistent resolve value from utils.\n    // This also prevents redundant API calls.\n    this.deferJoin = new Promise((resolve, reject) => {\n      joinFailed = reject;\n      joinSuccess = resolve;\n    });\n\n    // If Move or PSTN try merging into one\n    if (false) {\n      Metrics.postEvent({\n        event: eventType.CALL_INITIATED,\n        meeting: this,\n        data: {pstnAudioType: 'DIAL_IN'}\n      });\n    }\n    else {\n      Metrics.postEvent({\n        event: eventType.CALL_INITIATED,\n        meeting: this,\n        data: {trigger: trigger.USER_INTERACTION}\n      });\n\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.JOIN_ATTEMPT,\n        {\n          correlation_id: this.correlationId\n        }\n      );\n    }\n\n    LoggerProxy.logger.log('Meeting:index#join --> Joining a meeting');\n\n    if (this.meetingFiniteStateMachine.state === MEETING_STATE_MACHINE.STATES.ENDED) {\n      this.meetingFiniteStateMachine.reset();\n    }\n    if (this.meetingFiniteStateMachine.state !== MEETING_STATE_MACHINE.STATES.RINGING) {\n      this.meetingFiniteStateMachine.ring(_JOIN_);\n    }\n\n    // TODO: does this really need to be here?\n    if (options.resourceId && this.destination && options.resourceId === this.destination) {\n      this.wirelessShare = true;\n    }\n\n    if (options.meetingQuality) {\n      if (typeof options.meetingQuality === 'string') {\n        if (!QUALITY_LEVELS[options.meetingQuality]) {\n          const errorMessage = `Meeting:index#join --> ${options.meetingQuality} not defined`;\n          const error = new Error(errorMessage);\n\n          LoggerProxy.logger.error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(error);\n        }\n\n        this.mediaProperties.setLocalQualityLevel(options.meetingQuality);\n        this.mediaProperties.setRemoteQualityLevel(options.meetingQuality);\n      }\n\n      if (typeof options.meetingQuality === 'object') {\n        if (\n          !QUALITY_LEVELS[options.meetingQuality.local] &&\n          !QUALITY_LEVELS[options.meetingQuality.remote]\n        ) {\n          const errorMessage = `Meeting:index#join --> ${\n            options.meetingQuality.local || options.meetingQuality.remote\n          } not defined`;\n\n          LoggerProxy.logger.error(errorMessage);\n\n          const error = new Error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(new Error(errorMessage));\n        }\n\n        if (options.meetingQuality.local) {\n          this.mediaProperties.setLocalQualityLevel(options.meetingQuality.local);\n        }\n        if (options.meetingQuality.remote) {\n          this.mediaProperties.setRemoteQualityLevel(options.meetingQuality.remote);\n        }\n      }\n    }\n\n    return MeetingUtil.joinMeetingOptions(this, options).then((join) => {\n      this.meetingFiniteStateMachine.join();\n      LoggerProxy.logger.log('Meeting:index#join --> Success');\n\n      return join;\n    })\n      .then((join) => {\n        joinSuccess(join);\n        this.deferJoin = undefined;\n\n        return join;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#join --> Failed', error);\n\n        // TODO:  change this to error codes and pre defined dictionary\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            reason: error.error?.message,\n            stack: error.stack\n          }\n        );\n\n        joinFailed(error);\n        this.deferJoin = undefined;\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Moves the call to the specified resourceId\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveTo(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n\n    Metrics.mediaCapabilities({\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n    Metrics.moveMedia({meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this, {resourceId, moveToResource: true}).then(() => {\n      this.meetingFiniteStateMachine.join();\n\n      return this.updateMedia({\n        mediaSettings: {\n          sendVideo: false, receiveVideo: false, sendAudio: false, receiveAudio: false, sendShare: false, receiveShare: false\n        }\n      }).then(() => Promise.resolve(this));\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Moves the call from the specified resourceId, back to computer\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveFrom(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n    const oldCorrelationId = this.correlationId;\n\n    this.id = uuid.v4();\n\n    this.webex.meetings.meetingCollection.set(this);\n\n    Metrics.mediaCapabilities({\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          },\n          tx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          }\n        }\n      }\n    });\n    Metrics.moveMedia({meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this).then((join) => this.getMediaStreams({sendAudio: true, sendVideo: true, sendShare: false})\n      .then(([localStream, localShare]) =>\n        this.updateMedia({\n          mediaSettings: {\n            sendAudio: true, receiveAudio: true, sendVideo: true, receiveVideo: true, sendShare: false, receiveShare: false\n          },\n          localStream,\n          localShare\n        })\n          .then(() => Promise.resolve(join)))\n      .then(() => MeetingUtil.leaveMeeting(this, {resourceId, correlationId: oldCorrelationId, moveMeeting: true})))\n      .then(() => {\n        this.webex.meetings.meetingCollection.delete(oldCorrelationId);\n\n        return Promise.resolve();\n      });\n  }\n\n  /**\n   * Get local media streams based on options passed\n   * @param {MediaDirection} mediaDirection A configurable options object for joining a meeting\n   * @param {AudioVideo} [audioVideo] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @param {SharePreferences} [sharePreferences] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @returns {Promise} see #Media.getUserMedia\n   * @public\n   * @todo should be static, or moved so can be called outside of a meeting\n   * @memberof Meeting\n   */\n  getMediaStreams = (\n    mediaDirection,\n    // This return an OBJECT {video: {height, widght}}\n    audioVideo = VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel],\n    sharePreferences\n  ) => {\n    if (\n      mediaDirection &&\n      (\n        mediaDirection.sendAudio ||\n        mediaDirection.sendVideo ||\n        mediaDirection.sendShare\n      )\n    ) {\n      if (mediaDirection &&\n        (\n          mediaDirection.sendAudio &&\n          mediaDirection.sendVideo &&\n          mediaDirection.sendShare\n        ) &&\n        bowser.safari\n      ) {\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Setting `sendShare` to FALSE, due to complications with Safari');\n\n        mediaDirection.sendShare = false;\n\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Enabling `sendShare` along with `sendAudio` & `sendVideo`, on Safari, causes a failure while setting up a screen share at the same time as the camera+mic stream');\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Please use `meeting.shareScreen()` to manually start the screen share after successfully joining the meeting');\n      }\n\n      // extract deviceId if exists otherwise default to null.\n      const {deviceId: preferredVideoDevice} = (audioVideo && audioVideo.video || {deviceId: null});\n      const lastVideoDeviceId = this.mediaProperties.getVideoDeviceId();\n\n      if (preferredVideoDevice) {\n        // Store new preferred video input device\n        this.mediaProperties.setVideoDeviceId(preferredVideoDevice);\n      }\n      else if (lastVideoDeviceId) {\n        // no new video preference specified so use last stored value,\n        // works with empty object {} or media constraint.\n        // eslint-disable-next-line no-param-reassign\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            deviceId: lastVideoDeviceId\n          }\n        };\n      }\n\n      return Media.getSupportedDevice({\n        sendAudio: mediaDirection.sendAudio,\n        sendVideo: mediaDirection.sendVideo\n      })\n        .catch((error) => Promise.reject(\n          new MediaError('Given constraints do not match permission set for either camera or microphone', error)\n        ))\n        .then((devicePermissions) =>\n          Media.getUserMedia(\n            {\n              ...mediaDirection,\n              sendAudio: (mediaDirection.sendAudio === devicePermissions.sendAudio),\n              sendVideo: (mediaDirection.sendVideo === devicePermissions.sendVideo),\n              isSharing: this.isSharing\n            },\n            audioVideo,\n            sharePreferences,\n            this.config\n          )\n            .catch((error) => {\n              // Whenever there is a failure when trying to access a user's device\n              // report it as an operational metric\n              // This gives visibility into common errors and can help\n              // with further troubleshooting\n              const metricName = METRICS_OPERATIONAL_MEASURES.GET_USER_MEDIA_FAILURE;\n              const data = {\n                correlation_id: this.correlationId,\n                locus_id: this.locusUrl.split('/').pop(),\n                reason: error.message,\n                stack: error.stack\n              };\n              const metadata = {\n                type: error.name\n              };\n\n              Metrics.sendOperationalMetric(metricName, data, metadata);\n              throw new MediaError('Unable to retrieve media streams', error);\n            }));\n    }\n\n    return Promise.reject(\n      new MediaError('At least one of the mediaDirection value should be true')\n    );\n  };\n\n\n  /**\n   * Checks if the machine has at least one audio or video device\n   * @param {Object} options\n   * @param {Boolean} options.sendAudio\n   * @param {Boolean} options.sendVideo\n   * @returns {Object}\n   * @memberof Meetings\n   */\n  getSupportedDevices = ({sendAudio = true, sendVideo = true}) => Media.getSupportedDevice({sendAudio, sendVideo});\n\n  /**\n   * Get the devices from the Media module\n   * @returns {Promise} resolves to an array of DeviceInfo\n   * @memberof Meetings\n   */\n  getDevices = () => Media.getDevices();\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {Object} options A configurable options object for joining a meeting\n   * @param {Object} options.resourceId pass the deviceId\n   * @param {MediaDirection} options.mediaSettings pass media options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  addMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#addMedia -->';\n\n    if (MeetingUtil.isGuestUnjoined(this.locusInfo) && !this.wirelessShare) {\n      return Promise.reject(new MediaError(`To add media, the ${this.guest ? 'guest' : ''} user must be ${this.guest ? 'admitted. Wait to be admitted' : 'joined to the meeting'} to call addMedia`));\n    }\n    const {localStream, localShare, mediaSettings} = options;\n\n    LoggerProxy.logger.info(`${LOG_HEADER} Adding Media.`);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => {\n        if (!this.mediaProperties.peerConnection) {\n          this.mediaProperties.setMediaPeerConnection(MediaUtil.createPeerConnection());\n        }\n        this.setReconnectListener();\n        PeerConnectionManager.setPeerConnectionEvents(this);\n\n        return this.preMedia(localStream, localShare, mediaSettings);\n      })\n      .then(() => Media.attachMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection Received from attachMedia ${peerConnection}`);\n          this.setRemoteStream(peerConnection);\n          MeetingUtil.startInternalStats(this);\n          if (this.config.metrics.autoSendMQA) {\n            this.startMediaQualityMetrics();\n          }\n          if (this.config.stats.enableStatsAnalyzer) {\n            this.statsAnalyzer = new StatsAnalyzer(this.config.stats);\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEDIA_QUALITY, (res) => {\n              // TODO:  might have to send the same event to the developer\n              Metrics.postEvent({event: eventType.MEDIA_QUALITY, meetingId: this.correlationId, data: {intervalData: res}});\n            });\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS, (res) => {\n              if (res.mediaType === VIDEO) {\n                if (this.config.stats.autoDowngradeEnabled && this.canUpdateMedia()) {\n                  LoggerProxy.logger.log(`${LOG_HEADER} High Packet Loss Detected, Adjusting Local Video Quality`);\n                  if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.HIGH) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.MEDIUM);\n                  }\n                  else if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.MEDIUM) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.LOW);\n                  }\n                }\n                Trigger.trigger(\n                  this,\n                  {\n                    file: 'meeting/index',\n                    function: 'addMedia'\n                  },\n                  EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS,\n                  {\n                    mediaType: res.mediaType,\n                    packetLossRatio: res.packetLossRatio\n                  }\n                );\n              }\n            });\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error joining the call on roap initialization, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() => new Promise((resolve, reject) => {\n          let timerCount = 0;\n\n          // eslint-disable-next-line func-names\n          // eslint-disable-next-line prefer-arrow-callback\n          if (this.type === _CALL_) {\n            resolve();\n          }\n          const joiningTimer = setInterval(() => {\n            timerCount += 1;\n            if (this.meetingState === FULL_STATE.ACTIVE) {\n              clearInterval(joiningTimer);\n              resolve();\n            }\n\n            if (timerCount === 4) {\n              clearInterval(joiningTimer);\n              reject(new Error('Meeting is still not active '));\n            }\n          }, 1000);\n        }))\n        .then(() => logRequest(this.roap\n          .sendRoapMediaRequest({\n            sdp: this.mediaProperties.peerConnection.sdp,\n            roapSeq: this.roapSeq,\n            meeting: this // or can pass meeting ID\n          }), {\n          header: `${LOG_HEADER} Send Roap Media Request.`,\n          success: `${LOG_HEADER} Successfully send roap media request`,\n          failure: `${LOG_HEADER} Error joining the call on send roap media request, `\n        }))\n\n        .then(() => {\n          if (mediaSettings && mediaSettings.sendShare && localShare) {\n            if (this.state === MEETING_STATE.STATES.JOINED) {\n              return this.share();\n            }\n\n            // When the self state changes to JOINED then request the floor\n            this.floorGrantPending = true;\n          }\n\n          return Promise.resolve();\n        }))\n      .catch((error) => {\n        LoggerProxy.logger.error(`${LOG_HEADER} Error joining the call on roap initialization, `, error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      });\n  }\n\n  /**\n   * Informs if the peer connection is in a state that can be updated with updateMedia (audio/video/share)\n   * @returns {Boolean}\n   */\n  canUpdateMedia() {\n    return this.mediaProperties.peerConnection.signalingState === SDP.STABLE;\n  }\n\n  /**\n   * A confluence of updateAudio, updateVideo, and updateShare\n   * this function re-establishes all of the media streams with new options\n   * @param {Object} options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @param {MediaDirection} options.mediaSettings\n   * @returns {Promise}\n   * @todo fix setRemoteStream for updateMedia\n   * @public\n   * @memberof Meeting\n   */\n  updateMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#updateMedia -->';\n\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {localStream, localShare, mediaSettings} = options;\n\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.preMedia(localStream, localShare, mediaSettings))\n      .then(() => Media.updateMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection received from updateMedia, ${peerConnection}`);\n          this.setRemoteStream(peerConnection);\n          if (mediaSettings.receiveShare || localShare) {\n            PeerConnectionManager.setContentSlides(peerConnection);\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error updatedMedia, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.UPDATE_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() =>\n          logRequest(this.roap\n            .sendRoapMediaRequest({\n              sdp: this.mediaProperties.peerConnection.sdp,\n              roapSeq: this.roapSeq,\n              meeting: this // or can pass meeting ID\n            }),\n          {\n            header: `${LOG_HEADER} sendRoapMediaRequest being sent`,\n            success: `${LOG_HEADER} sendRoadMediaRequest successful`,\n            failure: `${LOG_HEADER} Error updateMedia on send roap media request, `\n          }))\n        .then(() => this.checkForStopShare(mediaSettings.sendShare, previousSendShareStatus))\n        .then((startShare) => {\n          // This is a special case if we do an /floor grant followed by /media\n          // we actually get a OFFER from the server and a GLAR condition happens\n          if (startShare) {\n            // We are assuming that the clients are connected when doing an update\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }));\n  }\n\n  /**\n   * Update the main audio streams with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendAudio\n   * @param {boolean} options.receiveAudio\n   * @param {MediaStream} options.stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateAudio(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendAudio, receiveAudio, stream} = options;\n    const {audioTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).audioTrack;\n\n    if (typeof sendAudio !== 'boolean' || typeof receiveAudio !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendAudio, localStream: stream})\n      .then(() => {\n        let previousMediaDirection = {};\n\n        if (this.mediaProperties.mediaDirection) {\n          previousMediaDirection = {\n            sendTrack: this.mediaProperties.mediaDirection.sendAudio,\n            receiveTrack: this.mediaProperties.mediaDirection.receiveAudio\n          };\n        }\n        else {\n          this.mediaProperties.mediaDirection = {};\n        }\n\n        return MeetingUtil.updateTransceiver(\n          {\n            type: 'audio',\n            sendTrack: options.sendAudio,\n            receiveTrack: options.receiveAudio,\n            track,\n            transceiver: audioTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            roapSeq: this.roapSeq,\n            meeting: this,\n            id: this.id\n          }\n        );\n      })\n      .then(() => {\n        this.setLocalTracks(stream);\n        this.mediaProperties.mediaDirection.sendAudio = sendAudio;\n        this.mediaProperties.mediaDirection.receiveAudio = receiveAudio;\n\n        // audio state could be undefined if you have not sent audio before\n        this.audio = this.audio || AudioStateMachine.create(this.mediaProperties.mediaDirection, this);\n      });\n  }\n\n  /**\n   * Update the main video streams with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendVideo\n   * @param {boolean} options.receiveVideo\n   * @param {MediaStream} options.stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateVideo(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendVideo, receiveVideo, stream} = options;\n    const {videoTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendVideo !== 'boolean' || typeof receiveVideo !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendVideo, localStream: stream})\n      .then(() => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: options.sendVideo,\n        receiveTrack: options.receiveVideo,\n        track,\n        transceiver: videoTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendVideo,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveVideo\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      }))\n      .then(() => {\n        this.setLocalTracks(stream);\n        this.mediaProperties.mediaDirection.sendVideo = sendVideo;\n        this.mediaProperties.mediaDirection.receiveVideo = receiveVideo;\n\n        // video state could be undefined if you have not sent video before\n        this.video = this.video || VideoStateMachine.create(this.mediaProperties.mediaDirection, this);\n      });\n  }\n\n  /**\n   * Internal function when stopping a share stream, cleanup\n   * @param {boolean} sendShare\n   * @param {boolean} previousShareStatus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  checkForStopShare(sendShare, previousShareStatus) {\n    if (!this.isSharing && sendShare &&\n      !previousShareStatus) {\n      // When user starts sharing\n      // return this.share();\n      return Promise.resolve(true);\n    }\n    if (this.isSharing && !sendShare &&\n      previousShareStatus) {\n      // When user stops sharing\n      return this.stopFloorRequest()\n        .then(() => Promise.resolve(false));\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Update the share streams, can be used to start sharing\n   * @param {Object} options\n   * @param {boolean} options.sendShare\n   * @param {boolean} options.receiveShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateShare(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendShare, receiveShare, stream} = options;\n    const {shareTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendShare !== 'boolean' || typeof receiveShare !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendShare and receiveShare parameter'));\n    }\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions({sendShare, localShare: stream})\n      .then(() => this.checkForStopShare(sendShare, previousSendShareStatus))\n      .then((startShare) => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: sendShare,\n        receiveTrack: receiveShare,\n        track,\n        transceiver: shareTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendShare,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveShare\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      })\n        .then(() => {\n          if (startShare) {\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }))\n      .then(() => {\n        this.setLocalShareTrack(stream);\n        this.mediaProperties.mediaDirection.sendShare = sendShare;\n        this.mediaProperties.mediaDirection.receiveShare = receiveShare;\n      });\n  }\n\n  /**\n   * Do all the attach media pre set up before executing the actual attach\n   * @param {MediaStream} localStream\n   * @param {MediaStream} localShare\n   * @param {MediaDirection} mediaSettings\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  preMedia(localStream, localShare, mediaSettings) {\n    // eslint-disable-next-line no-warning-comments\n    // TODO wire into default config. There's currently an issue with the stateless plugin or how we register\n    this.mediaProperties.setMediaDirection(Object.assign(this.config.mediaSettings, mediaSettings));\n    // add a setup a function move the create and setup media in future\n    // TODO: delete old audio and video if stale\n    this.audio = this.audio || AudioStateMachine.create(this.mediaProperties.mediaDirection, this);\n    this.video = this.video || VideoStateMachine.create(this.mediaProperties.mediaDirection, this);\n    // Validation is already done in addMedia so no need to check if the lenght is greater then 0\n    this.setLocalTracks(localStream);\n    this.setLocalShareTrack(localShare);\n  }\n\n  /**\n   * Acknowledge the meeting, outgoing or incoming\n   * @param {String} type\n   * @returns {Promise} resolve {message, ringing, response}\n   * @public\n   * @memberof Meeting\n   */\n  acknowledge(type) {\n    if (!type) {\n      return Promise.reject(new ParameterError('Type must be set to acknowledge the meeting.'));\n    }\n    if (type === _INCOMING_) {\n      return this.meetingRequest\n        .acknowledgeMeeting({\n          locusUrl: this.locusUrl,\n          deviceUrl: this.deviceUrl,\n          id: this.id\n        })\n        .then((response) => Promise.resolve(response))\n        .then((response) => {\n          this.meetingFiniteStateMachine.ring(type);\n          Metrics.postEvent({event: eventType.ALERT_DISPLAYED, meeting: this});\n\n          return Promise.resolve({\n            response\n          });\n        });\n    }\n\n    // TODO: outside of 1:1 incoming, and all outgoing calls\n    return Promise.resolve({\n      message: 'noop'\n    });\n  }\n\n  /**\n   * Decline this meeting\n   * @param {String} reason\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  decline(reason = _BUSY_) {\n    return MeetingUtil.declineMeeting(this, reason).then((decline) => {\n      this.meetingFiniteStateMachine.decline();\n\n      return Promise.resolve(decline);\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Leave the current meeting\n   * @param {Object} options leave options\n   * @param {String} options.resourceId the device with which to leave from, empty if just the computer\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  leave(options = {}) {\n    Metrics.postEvent({event: eventType.LEAVE, meeting: this, data: {trigger: trigger.USER_INTERACTION, canProceed: false}});\n    const leaveReason = options.reason || MEETING_REMOVED_REASON.CLIENT_LEAVE_REQUEST;\n\n    LoggerProxy.logger.log('Meeting:index#leave --> Leaving a meeting');\n\n    return MeetingUtil.leaveMeeting(this, options)\n      .then((leave) => {\n        this.meetingFiniteStateMachine.leave();\n\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // TODO: more testing before we remove this code, we are not sure the scenarios for destroy here\n        if (this.wirelessShare || this.guest) {\n          // If screen sharing clean the meeting object\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'leave'\n            },\n            EVENTS.DESTROY_MEETING,\n            {\n              reason: options.reason,\n              meetingId: this.id\n            }\n          );\n        }\n        LoggerProxy.logger.log('Meeting:index#leave --> LEAVE REASON ', leaveReason);\n\n        return leave;\n      }).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#leave --> Failed to leave ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_LEAVE_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Start sharing content with server\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  share() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && !this.isSharing) {\n      Metrics.postEvent({event: eventType.SHARE_INITIATED, meeting: this});\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .then(() => {\n          this.isSharing = true;\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'share'\n            },\n            EVENT_TRIGGERS.MEETING_STARTED_SHARING_LOCAL,\n          );\n          Metrics.postEvent({event: eventType.LOCAL_SHARE_FLOOR_GRANTED, meeting: this});\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#share --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MEETING_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without content.'));\n  }\n\n  /**\n   * Stops the screen share\n   * @returns {Promise} see #updateShare\n   * @public\n   * @memberof Meeting\n   */\n  stopShare() {\n    return this.updateShare({\n      sendShare: false,\n      receiveShare: this.mediaProperties.mediaDirection.receiveShare\n    });\n  }\n\n  /**\n   * sends stops floor request\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  stopFloorRequest() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && this.isSharing) {\n      Metrics.postEvent({event: eventType.SHARE_STOPPED, meeting: this});\n      Media.stopTracks(this.mediaProperties.shareTrack);\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.RELEASED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopFloorRequest --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.STOP_FLOOR_REQUEST_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n          this.isSharing = false;\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'stopFloorRequest'\n            },\n            EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n            {\n              reason: SHARE_STOPPED_REASON.SELF_STOPPED\n            }\n          );\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without content'));\n  }\n\n  /**\n   * Intiate a recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  startRecording() {\n    return MeetingUtil.startRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * End the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  stopRecording() {\n    return MeetingUtil.stopRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Pauses the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  pauseRecording() {\n    return MeetingUtil.pauseRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Resumes the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  resumeRecording() {\n    return MeetingUtil.resumeRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Locks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  lockMeeting() {\n    return MeetingUtil.lockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Unlocks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  unlockMeeting() {\n    return MeetingUtil.unlockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Sends DTMF tones to the current meeting\n   * @param {String} tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  sendDTMF(tones) {\n    const reject = (message) => {\n      LoggerProxy.logger.error(message);\n\n      return Promise.reject(new Error(message));\n    };\n\n    if (this.locusInfo && this.locusInfo.self) {\n      if (this.locusInfo.self.enableDTMF) {\n        return this.meetingRequest\n          .sendDTMF({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            tones\n          });\n      }\n\n      return reject('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have DTMF enabled');\n    }\n\n    return reject('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have a connection to the \"locus\" call control service. Have you joined?');\n  }\n\n  /**\n   * Sends request to change layout type for the current meeting for the specific participant/device only\n   * @param {String} layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  changeVideoLayout(layoutType) {\n    const reject = (message) => {\n      LoggerProxy.logger.error(message);\n\n      return Promise.reject(new Error(message));\n    };\n\n    const {mediaDirection, remoteVideoTrack} = this.mediaProperties;\n\n    // TODO: We need a real time value for Audio, Video and Share send indicator\n    if (mediaDirection.receiveVideo === true && remoteVideoTrack) {\n      if (LAYOUT_TYPES.includes(layoutType)) {\n        return this.meetingRequest\n          .changeVideoLayout({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            layoutType\n          })\n          .then((response) => {\n            if (response && response.body && response.body.locus) {\n              this.locusInfo.onFullLocus(response.body.locus);\n            }\n          });\n      }\n\n      return reject('Meeting:index#changeVideoLayout --> cannot change video layout, invalid layoutType recieved.');\n    }\n\n    return reject('Meeting:index#changeVideoLayout --> cannot change video layout, you are not recieving any video/share stream');\n  }\n\n  /**\n   * Sets the quality of the local video stream\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setLocalVideoQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setLocalVideoQuality --> Setting quality to ${level}`);\n\n    if (!VIDEO_RESOLUTIONS[level]) {\n      const errorMessage = `Meeting:index#setLocalVideoQuality --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    if (!this.mediaProperties.mediaDirection.sendVideo) {\n      const errorMessage = 'Meeting:index#setLocalVideoQuality --> unable to change video quality, sendVideo is disabled';\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.localQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setLocalQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setLocalQualityLevel(level);\n\n    const mediaDirection = {\n      sendAudio: this.mediaProperties.mediaDirection.sendAudio,\n      sendVideo: this.mediaProperties.mediaDirection.sendVideo,\n      sendShare: this.mediaProperties.mediaDirection.sendShare\n    };\n\n    return this.getMediaStreams(mediaDirection, VIDEO_RESOLUTIONS[level])\n      .then(([localStream]) =>\n        this.updateVideo({\n          sendVideo: true,\n          receiveVideo: true,\n          stream: localStream\n        }));\n  }\n\n  /**\n   * Sets the quality level of the remote incoming media\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setRemoteQualityLevel(level) {\n    LoggerProxy.logger.log(`Meeting:index#setRemoteQualityLevel --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      const errorMessage = `Meeting:index#setRemoteQualityLevel --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    if (!this.mediaProperties.mediaDirection.receiveAudio && !this.mediaProperties.mediaDirection.receiveVideo) {\n      const errorMessage = 'Meeting:index#setRemoteQualityLevel --> unable to change remote quality, receiveVideo and receiveAudio is disabled';\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.remoteQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setRemoteQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setRemoteQualityLevel(level);\n\n    return this.updateMedia({mediaSettings: this.mediaProperties.mediaDirection});\n  }\n\n  /**\n   * Sets the quality level of all meeting media (incoming/outgoing)\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setMeetingQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setMeetingQuality --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      const errorMessage = `Meeting:index#setMeetingQuality --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    const previousLevel = {\n      local: this.mediaProperties.localQualityLevel,\n      remote: this.mediaProperties.remoteQualityLevel\n    };\n\n    // If level is already the same, don't do anything\n    if (\n      level === this.mediaProperties.localQualityLevel &&\n      level === this.mediaProperties.remoteQualityLevel\n    ) {\n      LoggerProxy.logger.warn(`Meeting:index#setMeetingQuality --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Determine the direction of our current media\n    const {receiveAudio, receiveVideo, sendVideo} = this.mediaProperties.mediaDirection;\n\n    return (sendVideo ? this.setLocalVideoQuality(level) : Promise.resolve())\n      .then(() =>\n        ((receiveAudio || receiveVideo) ?\n          this.setRemoteQualityLevel(level) :\n          Promise.resolve()))\n      .catch((error) => {\n        // From troubleshooting it seems that the stream itself doesn't change the max-fs if the peer connection isn't stable\n        this.mediaProperties.setLocalQualityLevel(previousLevel.local);\n        this.mediaProperties.setRemoteQualityLevel(previousLevel.remote);\n\n        LoggerProxy.logger.error(`Meeting:index#setMeetingQuality --> ${error.message}`);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.SET_MEETING_QUALITY_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n  * @param {Object} options parameter\n  * @param {Boolean} options.sendAudio send audio from the display share\n  * @param {Boolean} options.sendShare send video from the display share\n  * @param {Object} options.sharePreferences\n  * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n  *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n  * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n  * @returns {Promise.<MediaStream>}\n  */\n  shareScreen(options = {}) {\n    LoggerProxy.logger.log('Meeting:index#shareScreen --> Getting local share');\n\n    const shareConstraints = {\n      sendShare: true,\n      sendAudio: false,\n      ...options\n    };\n\n    return Media.getDisplayMedia(shareConstraints, this.config)\n      .then((shareStream) => this.updateShare({\n        sendShare: true,\n        receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n        stream: shareStream\n      }))\n      .catch((error) => {\n        // Whenever there is a failure when trying to access a user's display\n        // report it as an operational metric\n        // This gives visibility into common errors and can help\n        // with further troubleshooting\n\n        // This metrics will get erros for getDisplayMedia and share errors for now\n        // TODO: The getDisplayMedia errors need to be moved inside `media.getDisplayMedia`\n        const metricName = METRICS_OPERATIONAL_MEASURES.GET_DISPLAY_MEDIA_FAILURE;\n        const data = {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendOperationalMetric(metricName, data, metadata);\n        throw new MediaError('Unable to retrieve display media stream', error);\n      });\n  }\n}\n"]}