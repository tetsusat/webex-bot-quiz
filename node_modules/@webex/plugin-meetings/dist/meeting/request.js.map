{"version":3,"sources":["request.js"],"names":["MeetingRequest","options","sipUri","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","pin","moveToResource","roapMessage","preferTranscoding","LoggerProxy","logger","info","url","body","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","clientMediaPreferences","undefined","PARTICIPANT","webex","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","error","concat","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","request","method","HTTP_VERBS","POST","uri","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","catch","err","reject","selfId","LEAVE","PUT","ALERT","id","CONTROLS","record","recording","paused","PATCH","lock","locked","DECLINE","reason","MEDIA","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","tones","SEND_DTMF_ENDPOINT","dtmf","uuid","v4","layoutType","layout","type","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_\n} from '../constants';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n  async joinMeeting(options) {\n    const {\n      sipUri, deviceUrl, locusUrl, resourceId, correlationId, ensureConversation, moderator, pin, moveToResource, roapMessage, preferTranscoding\n    } = options;\n\n    LoggerProxy.logger.info(\n      'Meeting:request#joinMeeting --> Joining a meeting',\n      correlationId\n    );\n\n    let url = '';\n\n    const body = {\n      device: {\n        url: deviceUrl,\n        deviceType: this.config.meetings.deviceType\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: resourceId && moveToResource || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1,\n      clientMediaPreferences: {\n        preferTranscoding: preferTranscoding ?? true\n      }\n    };\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (pin !== undefined) {\n      body.pin = pin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    }\n    else if (sipUri) {\n      try {\n        await this.webex.internal.services.waitForCatalog('postauth');\n        url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: sipUri\n        };\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Meeting:request#joinMeeting --> ${e}`);\n        throw (e);\n      }\n    }\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === sipUri) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_]\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    return this.webex.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl.concat(syncUrl.split('?')[1] ? '&' : '?').concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#syncMeeting --> Error syncing meeting, error ${err}`);\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolen} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  getFullLocus(options) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl\n      }).catch((err) => {\n        LoggerProxy.logger.error(`Meeting:request#getFullLocus --> Error getting full locus, error ${err}`);\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @param {String} options.selfId\n   * @param {Url} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting({\n    locusUrl, selfId, deviceUrl: url, resourceId, correlationId\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#leaveMeeting --> Leaving a meeting',\n      correlationId\n    );\n\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url\n      },\n      usingResource: resourceId || null,\n      correlationId\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      correlationId: options.id\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.id\n   * @returns {Promise}\n   */\n  recordMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      record: {\n        recording: options.recording,\n        paused: options.paused\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      reason: options.reason\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(options) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias,\n      clientMediaPreferences: {\n        preferTranscoding: options.preferTranscoding ?? true\n      }\n    };\n\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(options) {\n    let floorReq = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl\n            }\n          ]\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl\n        }\n      };\n    }\n\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body: {\n        floor: floorReq,\n        resourceUrl: options.resourceUrl\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}) {\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones\n        }\n      }\n    });\n  }\n\n  /**\n   * Sends a request to the controls endpoint to set the video layout\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @returns {Promise}\n   */\n  changeVideoLayout({locusUrl, deviceUrl, layoutType}) {\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri: `${locusUrl}/${CONTROLS}`,\n      body: {\n        layout: {\n          deviceUrl,\n          type: layoutType\n        }\n      }\n    });\n  }\n}\n"]}