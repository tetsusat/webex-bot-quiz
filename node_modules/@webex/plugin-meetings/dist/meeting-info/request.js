"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _construct = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/construct"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _webexCore = require("@webex/webex-core");

var _constants = require("../constants");

var _parameter = _interopRequireDefault(require("../common/errors/parameter"));

var _util = _interopRequireDefault(require("./util"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = (0, _construct.default)(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_construct.default) return false; if (_construct.default.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call((0, _construct.default)(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @class MeetingInfoRequest
 */
var MeetingInfoRequest = /*#__PURE__*/function (_StatelessWebexPlugin) {
  (0, _inherits2.default)(MeetingInfoRequest, _StatelessWebexPlugin);

  var _super = _createSuper(MeetingInfoRequest);

  function MeetingInfoRequest() {
    var _this;

    (0, _classCallCheck2.default)(this, MeetingInfoRequest);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "namespace", _constants.MEETINGS);
    return _this;
  }

  (0, _createClass2.default)(MeetingInfoRequest, [{
    key: "fetchMeetingInfo",

    /**
     *
     * @param {Object} options with format of {type: String, desintation: String}
     * where type is PERSONAL_ROOM, SIP_URI, CONVERSATION_URL, and destination is userId, sipUri, conversationUrl respectively
     * type can also be specified as an option and be of the list SIP_URI,MEETING_ID,LOCUS_ID,PERSONAL_ROOM,MEETING_LINK,ONE_ON_ONE,MEDIA_SIP_URI,CONVERSATION_URL,TEMP_SIP_URI
     * with the desination matching
     * @returns {Promise} returns a promise that resolves/rejects the result of the request
     * @throws {Error} if the options are not valid and complete
     * @memberof MeetingInfoRequest
     */
    value: function fetchMeetingInfo(options) {
      if (!options || !options.type || !options.destination) {
        throw new _parameter.default('MeetingInfo should be fetched with a type and destination specified, see list of valid types and their corresponding values in constants');
      }

      var resourceUrl = _util.default.getResourceUrl(options.type, options.destination);

      var requestParams = _util.default.getRequestParams(resourceUrl, options.type, options.destination, _constants.API.LOCUS);

      return this.request(requestParams);
    }
  }]);
  return MeetingInfoRequest;
}(_webexCore.StatelessWebexPlugin);

exports.default = MeetingInfoRequest;
//# sourceMappingURL=request.js.map
